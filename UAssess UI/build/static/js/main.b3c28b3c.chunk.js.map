{"version":3,"sources":["assets/img/sidebar.jpg","assets/img/logo.png","variables/Variables.jsx","components/Card/Card.jsx","views/Dashboard/AuthorEditQuestions/Question.jsx","views/Dashboard/AuthorEditQuestions/SingleSelect.jsx","views/Dashboard/AuthorEditQuestions/MultiSelect.jsx","api/SkillApi.jsx","api/CompetencyApi.jsx","api/SubCompetencyApi.jsx","api/LevelApi.jsx","views/Dashboard/AuthorEditQuestions/Skills.jsx","components/CustomButton/CustomButton.jsx","views/Dashboard/AuthorEditQuestions/BottomButtons.jsx","api/QuestionApi.jsx","views/Dashboard/AuthorEditQuestions/Dashboard.jsx","views/Dashboard/AuthorEditQuestions/AuthorEditQuestion.jsx","views/Dashboard/EvaluatorEditQuestions/EvaluatorEditQuestions.jsx","views/UnAuthorized/UnAuthorized.jsx","views/Dashboard/EvaluatorEditQuestions/Index.jsx","views/Dashboard/ShowAllQuestion.jsx","components/TagInput/TagsInput.jsx","views/Dashboard/SkillSelection.jsx","views/Dashboard/Dashboard.jsx","views/Dashboard/Index.jsx","views/CreateQuestions/Question.jsx","views/CreateQuestions/SingleSelect.jsx","views/CreateQuestions/MultiSelect.jsx","views/CreateQuestions/BottomButtons.jsx","views/CreateQuestions/Skills.jsx","views/CreateQuestions/CreateQuestions.jsx","views/CreateQuestions/Index.jsx","components/CustomButton/SubmitButton.jsx","views/Manage/Skills.jsx","views/Manage/Competency.jsx","views/Manage/Sub-Competency.jsx","views/Manage/Level.jsx","views/Manage/Manage.jsx","views/Manage/Index.jsx","api/AuthenticationApi.jsx","views/AddNewUser/AddNewUser.jsx","views/AddNewUser/Index.jsx","views/Settings/Settings.jsx","routes/MainRoutes.jsx","views/Settings/Index.jsx","views/Authentication/SignOut.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","api/UserApi.jsx","views/Authentication/Login.jsx","routes/Verification.jsx","index.js"],"names":["module","exports","__webpack_require__","p","defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","Card","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","react_default","a","createElement","className","props","plain","question","login","skills","noPadding","header","hCenter","title","ctAllIcons","ctTableFullWidth","ctTableResponsive","ctTableUpgrade","content","Component","Question","state","setState","questionTitle","_this2","es","fluid","md","paddingRight","type","bsClass","placeholder","name","onChange","e","target","required","paddingLeft","componentClass","changeKey","selectedKey","MultipleChoice","label","optionStatus","optionLabel","optionRightStatus","Addon","aria-label","selectValue","checked","inputRef","element","optionValue","push","aria-hidden","onClick","changeOptionCount","bind","Checkbox","handleChange","found","_this","checkBoxValue","length","i","headers","Content-Type","Access-Control-Allow-Origin","GetSkillsApi","data","axios","post","process","token","localStorage","getItem","active","then","res","catch","console","log","CreateSkillApi","UpdateSkillApi","UpdateSkillStatusApi","GetCompetenciesApi","CreateCompetencyApi","UpdateCompetencyApi","UpdateCompetencyStatusApi","GetSubCompetenciesApi","CreateSubCompetencyApi","UpdateSubCompetencyApi","UpdateSubCompetencyStatusApi","GetLevelApi","CreateLevelApi","UpdateLevelApi","UpdateLevelStatusApi","Skills","skills_dropdown","competencies_dropdown","subCompetencies_dropdown","level_dropdown","currentExpiryDate","currentAnswerType","currentLevel","getCompetencies","competencies","skillId","competencyIds","CompetencyApi","ids","code","map","result","subCompetencyIds","competencyId","id","select","getSubCompetencies","subcompetencies","SubCompetencyApi","subCompetencyId","expiryDate","answerType","level","SkillsApi","LevelApi","_this3","CustomButton","_this$props","fill","simple","pullRight","round","block","rest","objectWithoutProperties","btnClasses","cx","btn-fill","btn-simple","pull-right","btn-block","btn-round","assign","BottomButtons","components_CustomButton_CustomButton","bsStyle","getbody","CreateQuestionApi","UpdateQuestionApi","UpdateQuestionStatusApi","moment","require","Dashboard","call","optionCount","cancelButton","submitQuestion","preventDefault","option","apioption","apicompetencies","apisubcompetencies","questiontype","expirydate","isValid","typeOfQuestion","concat","answer","radiogroup","index","findIndex","x","selected_question","competency","subcompetency","subCompetencies","QuestionApi","questionName","questionId","titleMedia","optionType","options","expiresAt","weightage","alert","react_bootstrap_sweetalert_default","onConfirm","onHide","renderSwitch","items","SingleSelect_MultipleChoice","optionId","MultiSelect_Checkbox","selectedQuestion","currentlevel","react","Card_Card","onSubmit","Question_Question","Skills_Skills","BottomButtons_BottomButtons","AuthorEditQuestion","bsSize","aria-labelledby","Header","closeButton","Body","AuthorEditQuestions_Dashboard","EvaluatorEditQuestions","questionState","checkboxOn","changeCheckboxStatus","changeQuestionStatus","comments","reviews","controlId","UnAuthorized","Index","JSON","parse","includes","EvaluatorEditQuestions_EvaluatorEditQuestions","show","UnAuthorized_UnAuthorized","ShowAllQuestion","lgShow","evalLgShow","editAuthorQuestion","questions","filter","editEvaluatorQuestion","deleteQuestion","persist","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","updateQuestion","onCancel","lgClose","striped","hover","responsive","createdAt","format","maxWidth","whiteSpace","AuthorEditQuestion_AuthorEditQuestion","Index_Index","Tag","Delete","readOnly","TagsInput","newTag","handleRemoveTag","tag","parentNode","textContent","trim","removeTag","TagsInput_Tag","TagsInput_Delete","React","SkillSelection","skill_list","tags","updateTags","toConsumableArray","removeTags","indexOf","_","handleClose","_loop","TagsInput_TagsInput","Footer","isLoading","filterParameter","setItem","stringify","prevState","createdBy","filteredQuestion","toLowerCase","marginBottom","bundle_default","count","ShowAllQuestion_ShowAllQuestion","SkillSelection_SkillSelection","Dashboard_Dashboard_Dashboard","questionNo","questionCount","surveyjsjson","pages","elements","skill","choices","list","danger","CreateQuestions_SingleSelect_MultipleChoice","CreateQuestions_MultiSelect_Checkbox","Survey","cssType","model","mode","survey_react","CreateQuestions_Question_Question","CreateQuestions_Skills_Skills","CreateQuestions_BottomButtons_BottomButtons","role","CreateQuestions","SubmitButton","buttonName","new_skills_label","new_skills_description","no_of_new_skills","competency_dropdown","active_status","tempDesc","addNewSkills","skill_label","description","main_skill_list","forEach","updateSkillList","changeNumberOfNewSkills","message","editExistingSkills","updateskill","main_competency_list","updateSkillName","updateSkillDescription","new_skills","changeActiveStatus","changeSkillStatus","skillstatus","populateTags","competencyLabel","components_Card_Card","SubmitButton_SubmitButton","validationState","Competency","main_subcompetency_list","new_competencies_label","new_competencies_description","no_of_new_competency","subcompetency_dropdown","addNewCompetency","competencies_label","updateCompetencyList","changeNumberOfNewCompetency","editExistingCompetency","updatecompetency","updateCompetencyName","updateCompetencyDescription","new_competency","changeCompetencyStatus","competencystatus","SubCompetency","new_subcompetencies_label","new_subcompetencies_description","no_of_new_subcompetency","addNewSubCompetency","subCompetencies_label","updateSubCompetencyList","changeNumberOfNewSubCompetency","editExistingSubCompetency","updatesubcompetency","updateSubCompetencyName","updateSubCompetencyDescription","new_subcompetency","changeSubCompetencyStatus","subcompetencystatus","Level","addNewLevel","leveldesc","levelname","levelNo","levelno","time","leveltime","main_level_list","updateLevelList","editExistingLevel","updatelevel","updateLevelName","updateLevelDescription","levelId","changeLevelStatus","Manage","defaultChecked","htmlFor","Manage_Skills_Skills","Competency_Competency","Sub_Competency_SubCompetency","Level_Level","Manage_Manage","Login","Register","AddNewUser","registerUser","password","cpassword","userrole","AuthenticationApi","email","username","privilegeRole","pushNotificationId","clientId","companyId","jobRole","paddingBottom","AddNewUser_AddNewUser","Settings","MainRoutes","path","icon","page","component","Settings_Settings","clear","history","redirect","to","mobileSidebarToggle","assertThisInitialized","sidebarExists","document","documentElement","classList","toggle","node","onclick","parentElement","removeChild","body","appendChild","prop","collapse","views","location","pathname","Brand","href","getBrand","Toggle","Date","getFullYear","Sidebar","innerWidth","routeName","updateDimensions","addEventListener","sidebarBackground","backgroundImage","imagine","data-color","data-image","src","logo","alt","upgrade","activeRoute","react_router_dom","activeClassName","getMyProfileApi","checkUser","authType","userId","appVersion","privilegeRoles","UserApi","Verification","redirectToLoginPage","_notificationSystem","logoutUser","handleNotificationClick","Math","floor","random","addNotification","autoDismiss","componentDidMount","refs","notificationSystem","componentDidUpdate","action","scrollTop","scrollingElement","mainPanel","NotificationSystem_default","ref","Sidebar_Sidebar","components_Header_Header","react_router","from","exact","Footer_Footer","ReactDOM","render","getElementById"],"mappings":"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CA,eACA,gBACA,YACA,gBACA,kBACA,mBACA,eACA,YACA,eACA,mBACA,aACA,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,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","file":"static/js/main.b3c28b3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sidebar.08efb632.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.882fa1d7.png\";","//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768 ? window.screen.width * 1 / 3 : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","import React, { Component } from \"react\";\n\nexport class Card extends Component {\n  render() {\n    return (\n      <div\n        className={\n          \"card\" +\n          (this.props.plain ? \" card-plain\" : \"\") +\n          (this.props.question ? \" question\" : \"\") +\n          (this.props.login ? \" login-container__form-container\" : \"\") +\n          (this.props.skills ? \" skills\" : \"\") +\n          (this.props.noPadding ? \" no-padding\" : \"\")\n        }\n      >\n        {this.props.header ? (\n          <div\n            className={\"header\" + (this.props.hCenter ? \" text-center\" : \"\")}\n          >\n            <h4 className=\"title\">{this.props.title}</h4>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div\n          className={\n            \"content\" +\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\n            (this.props.ctTableFullWidth ? \" table-full-width\" : \"\") +\n            (this.props.ctTableResponsive ? \" table-responsive\" : \"\") +\n            (this.props.ctTableUpgrade ? \" table-upgrade\" : \"\") +\n            (this.props.noPadding ? \" no-padding\" : \"\")\n          }\n        >\n          {this.props.content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\r\nimport { Row, Grid, Col, FormControl, FormGroup } from \"react-bootstrap\";\r\n\r\nexport default class Question extends Component {\r\n  state = {\r\n    title: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ title: this.props.questionTitle });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={1}>\r\n              <p>Q1.</p>\r\n            </Col>\r\n            <FormGroup>\r\n              <Col md={8} style={{ paddingRight: \"0px\" }}>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  bsClass=\"form-control question-dropdown\"\r\n                  placeholder=\"Enter your question\"\r\n                  name=\"questionName\"\r\n                  value={this.state.title}\r\n                  onChange={e => this.setState({ title: e.target.value })}\r\n                  required\r\n                />\r\n              </Col>\r\n              <Col md={3} style={{ paddingLeft: \"0px\" }}>\r\n                <FormControl\r\n                  componentClass=\"select\"\r\n                  bsClass=\"form-control question-dropdown\"\r\n                  name=\"typeOfQuestion\"\r\n                  onChange={this.props.changeKey}\r\n                  value={this.props.selectedKey}\r\n                >\r\n                  <option value=\"0\">Select Type</option>\r\n                  <option value=\"1\">Single Select</option>\r\n                  <option value=\"2\">Multi Select</option>\r\n                  <option value=\"3\">Text Area</option>\r\n                  <option value=\"4\">Video Question</option>\r\n                </FormControl>\r\n              </Col>\r\n            </FormGroup>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Grid,\r\n  FormControl,\r\n  FormGroup,\r\n  InputGroup\r\n} from \"react-bootstrap\";\r\n\r\nexport default class MultipleChoice extends Component {\r\n  state = {\r\n    label: \"\",\r\n    optionStatus: false\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ label: this.props.optionLabel, optionStatus: this.props.optionRightStatus });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col md={10}>\r\n            <FormGroup>\r\n              <InputGroup>\r\n                <InputGroup.Addon>\r\n                  <input\r\n                    type=\"radio\"\r\n                    aria-label=\"...\"\r\n                    value={this.props.selectValue}\r\n                    name=\"radiogroup\"\r\n                    checked={this.state.optionStatus}\r\n                    onChange={e => this.setState({optionStatus: !this.state.optionStatus})}\r\n                  />\r\n                </InputGroup.Addon>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  value={this.state.label}\r\n                  placeholder=\"Enter an answer choice\"\r\n                  bsClass=\"form-control question-dropdown\"\r\n                  onChange={e => this.setState({ label: e.target.value })}\r\n                  inputRef={element =>\r\n                    element ? this.props.optionValue.push(element) : \"\"\r\n                  }\r\n                  required\r\n                />\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <i\r\n              className=\"fa fa-plus-circle fa-2x option-icon\"\r\n              aria-hidden=\"true\"\r\n              onClick={this.props.changeOptionCount.bind(this, 1)}\r\n            />\r\n            &emsp;&emsp;\r\n            <i\r\n              className=\"fa fa-minus-circle fa-2x option-icon\"\r\n              aria-hidden=\"true\"\r\n              onClick={this.props.changeOptionCount.bind(this, -1)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Grid,\r\n  FormControl,\r\n  FormGroup,\r\n  InputGroup\r\n} from \"react-bootstrap\";\r\n\r\nexport default class Checkbox extends Component {\r\n  state = {\r\n    label: \"\",\r\n    optionStatus: false\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      label: this.props.optionLabel,\r\n      optionStatus: this.props.optionRightStatus\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    let found = 0;\r\n    if (this.props.checkBoxValue.length > 0) {\r\n      for (let i = 0; i < this.props.checkBoxValue.length; i++)\r\n        if (this.props.checkBoxValue[i].name === e.target.value) {\r\n          this.props.checkBoxValue[i].value = e.target.checked;\r\n          found = 1;\r\n          break;\r\n        }\r\n      if (found === 0)\r\n        this.props.checkBoxValue.push({\r\n          name: e.target.value,\r\n          value: e.target.checked\r\n        });\r\n    } else\r\n      this.props.checkBoxValue.push({\r\n        name: e.target.value,\r\n        value: e.target.checked\r\n      });\r\n    this.setState({optionStatus: !this.state.optionStatus})\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col md={10}>\r\n            <FormGroup>\r\n              <InputGroup>\r\n                <InputGroup.Addon>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    aria-label=\"...\"\r\n                    value={this.props.selectValue}\r\n                    checked={this.state.optionStatus}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputGroup.Addon>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  value={this.state.label}\r\n                  placeholder=\"Enter an answer choice\"\r\n                  bsClass=\"form-control question-dropdown\"\r\n                  onChange={e => this.setState({ label: e.target.value })}\r\n                  inputRef={element =>\r\n                    element ? this.props.optionValue.push(element) : \"\"\r\n                  }\r\n                  required\r\n                />\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <i\r\n              className=\"fa fa-plus-circle fa-2x option-icon\"\r\n              aria-hidden=\"true\"\r\n              onClick={this.props.changeOptionCount.bind(this, 1)}\r\n            />\r\n            &emsp;&emsp;\r\n            <i\r\n              className=\"fa fa-minus-circle fa-2x option-icon\"\r\n              aria-hidden=\"true\"\r\n              onClick={this.props.changeOptionCount.bind(this, -1)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nconst header = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n};\r\n\r\nexport const GetSkillsApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/get-skills\",\r\n      {\r\n        token: localStorage.getItem(\"token\"),\r\n        active: true\r\n      },\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/SkillApi in GetSkillsApi() for Fetching Skills\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const CreateSkillApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/create-skills\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/SkillApi in CreateSkillApi() for Adding New Skills\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateSkillApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/update-skill\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/SkillApi in UpdateSkillApi() for Updating Skills\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateSkillStatusApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/update-skill-status\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/SkillApi in UpdateSkillStatusApi() for Updating Skills Status\",\r\n        error\r\n      )\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nconst header = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n};\r\n\r\nexport const GetCompetenciesApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/get-competencies\",\r\n      {\r\n        token: localStorage.getItem(\"token\"),\r\n        active: true\r\n      },\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/CompetencyApi in GetCompetenciesApi() for Fetching Competencies\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const CreateCompetencyApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/create-competencies\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/CompetencyApi in CreateCompetencyApi() for Adding New Competency\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateCompetencyApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/update-competency\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/CompetencyApi in UpdateCompetencyApi() for Updating Competency\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateCompetencyStatusApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/update-competency-status\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/CompetencyApi in UpdateCompetencyStatusApi() for Updating Competency Status\",\r\n        error\r\n      )\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nconst header = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n};\r\n\r\nexport const GetSubCompetenciesApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/get-sub-competencies\",\r\n      {\r\n        token: localStorage.getItem(\"token\"),\r\n        active: true\r\n      },\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/SubCompetencyApi in GetSubCompetenciesApi() for Fetching Sub-Competencies\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const CreateSubCompetencyApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/create-sub-competencies\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/SubCompetencyApi in CreateSubCompetencyApi() for Adding New SubCompetency\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateSubCompetencyApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/update-sub-competencies\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/SubCompetencyApi in UpdateSubCompetencyApi() for Updating SubCompetency\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateSubCompetencyStatusApi = data => {\r\n  return axios\r\n  .post(\r\n    process.env.REACT_APP_PATH_URL_3001_v1 + \"/update-subcompetency-status\",\r\n    data,\r\n    header\r\n  )\r\n  .then(res => res.data)\r\n  .catch(error =>\r\n    console.log(\r\n      \"parsing failed at src/api/SubCompetencyApi in UpdateSubCompetencyStatusApi() for Updating SubCompetency Status\",\r\n      error\r\n    )\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst header = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n};\r\n\r\nexport const GetLevelApi = () => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/get-Levels\",\r\n      {\r\n        token: localStorage.getItem(\"token\"),\r\n        active: true\r\n      },\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/LevelApi in GetLevelApi() for Fetching Level\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const CreateLevelApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/create-Level\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/LevelApi in CreateLevelApi() for Adding New Level\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateLevelApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3001_v1 + \"/update-level\",\r\n      data,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/LevelApi in UpdateLevelApi() for Updating Level\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateLevelStatusApi = data => {\r\n  return axios\r\n  .post(\r\n    process.env.REACT_APP_PATH_URL_3001_v1 + \"/update-level-status\",\r\n    data,\r\n    header\r\n  )\r\n  .then(res => res.data)\r\n  .catch(error =>\r\n    console.log(\r\n      \"parsing failed at src/api/LevelApi in UpdateLevelStatusApi() for Updating Level Status\",\r\n      error\r\n    )\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Grid, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport * as SkillsApi from \"api/SkillApi\";\r\nimport * as CompetencyApi from \"api/CompetencyApi\";\r\nimport * as SubCompetencyApi from \"api/SubCompetencyApi\";\r\nimport * as LevelApi from \"api/LevelApi\";\r\n\r\nexport default class Skills extends Component {\r\n  state = {\r\n    skills_dropdown: [],\r\n    competencies_dropdown: [],\r\n    subCompetencies_dropdown: [],\r\n    level_dropdown: [],\r\n    currentExpiryDate: \"\",\r\n    currentAnswerType: \"\",\r\n    currentLevel: \"\"\r\n  };\r\n\r\n  getCompetencies = e => {\r\n    let competencies = [];\r\n    for (let i = 0; i < this.state.skills_dropdown.length; i++) {\r\n      if (this.state.skills_dropdown[i].skillId === e.target.value) {\r\n        competencies = this.state.skills_dropdown[i].competencyIds;\r\n        break;\r\n      }\r\n    }\r\n    if (competencies.length > 0)\r\n      CompetencyApi.GetCompetenciesApi({\r\n        token: localStorage.getItem(\"token\"),\r\n        active: true,\r\n        ids: competencies\r\n      }).then(res => {\r\n        if (res.code === \"0\")\r\n          this.setState({\r\n            competencies_dropdown: res.data.map((result, key) => {\r\n              return {\r\n                subCompetencyIds: result.subCompetencyIds,\r\n                competencyId: result.id,\r\n                select: (\r\n                  <option value={result.id} key={result.id}>\r\n                    {result.label}\r\n                  </option>\r\n                )\r\n              };\r\n            })\r\n          });\r\n      });\r\n  };\r\n\r\n  getSubCompetencies = e => {\r\n    let subcompetencies = [];\r\n    for (let i = 0; i < this.state.competencies_dropdown.length; i++) {\r\n      if (this.state.competencies_dropdown[i].competencyId === e.target.value) {\r\n        subcompetencies = this.state.competencies_dropdown[i].subCompetencyIds;\r\n        break;\r\n      }\r\n    }\r\n    if (subcompetencies.length > 0)\r\n      SubCompetencyApi.GetSubCompetenciesApi({\r\n        token: localStorage.getItem(\"token\"),\r\n        active: true,\r\n        ids: subcompetencies\r\n      }).then(res => {\r\n        if (res.code === \"0\")\r\n          this.setState({\r\n            subCompetencies_dropdown: res.data.map((result, key) => {\r\n              return {\r\n                subCompetencyId: result.id,\r\n                select: (\r\n                  <option value={result.id} key={result.id}>\r\n                    {result.label}\r\n                  </option>\r\n                )\r\n              };\r\n            })\r\n          });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentExpiryDate: this.props.expiryDate,\r\n      currentAnswerType: this.props.answerType,\r\n      currentLevel: this.props.level\r\n    });\r\n    SkillsApi.GetSkillsApi().then(res => {\r\n      if (res.code === \"0\")\r\n        this.setState({\r\n          skills_dropdown: res.data.map((result, key) => {\r\n            return {\r\n              competencyIds: result.competencyIds,\r\n              skillId: result.id,\r\n              select: (\r\n                <option value={result.id} key={result.id}>\r\n                  {result.label}\r\n                </option>\r\n              )\r\n            };\r\n          })\r\n        });\r\n    });\r\n    LevelApi.GetLevelApi().then(res => {\r\n      if (res.code === \"0\")\r\n        this.setState({\r\n          level_dropdown: res.data.map(result => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Skills</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"skill\"\r\n              onChange={this.getCompetencies}\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              {this.state.skills_dropdown.map((data, key) => {\r\n                return data.select;\r\n              })}\r\n            </FormControl>\r\n          </Col>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Competencies</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"competency\"\r\n              onChange={this.getSubCompetencies}\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              {this.state.competencies_dropdown.map((data, key) => {\r\n                return data.select;\r\n              })}\r\n            </FormControl>\r\n          </Col>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Sub-Competencies</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"subcompetency\"\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              {this.state.subCompetencies_dropdown.map((data, key) => {\r\n                return data.select;\r\n              })}\r\n            </FormControl>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Level</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"level\"\r\n              value={this.state.currentLevel}\r\n              onChange={e => this.setState({ currentLevel: e.target.value })}\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              {this.state.level_dropdown}\r\n            </FormControl>\r\n          </Col>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Answer Type</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"answerType\"\r\n              value={this.state.currentAnswerType}\r\n              onChange={e =>\r\n                this.setState({ currentAnswerType: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              <option value=\"correctAnswer\">Correct Answer</option>\r\n              <option value=\"notApplicable\">Not Applicable</option>\r\n            </FormControl>\r\n          </Col>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Expiry Date</ControlLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"YYYY-MM-DD\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"expirydate\"\r\n              value={this.state.currentExpiryDate}\r\n              onChange={e =>\r\n                this.setState({ currentExpiryDate: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const { fill, simple, pullRight, round, block, ...rest } = this.props;\n\n    const btnClasses = cx({\n      \"btn-fill\": fill,\n      \"btn-simple\": simple,\n      \"pull-right\": pullRight,\n      \"btn-block\": block,\n      \"btn-round\": round\n    });\n\n    return <Button className={btnClasses} {...rest} />;\n  }\n}\n\nCustomButton.propTypes = {\n  fill: PropTypes.bool,\n  simple: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  block: PropTypes.bool,\n  round: PropTypes.bool\n};\n\nexport default CustomButton;\n","import React, { Component } from \"react\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nexport default class BottomButtons extends Component {\r\n  render() {\r\n    return (\r\n      <Row style={{ padding: \"15px\" }} >\r\n        <Button\r\n          bsStyle=\"info\"\r\n          pullRight\r\n          fill\r\n          type=\"submit\"\r\n          style={{ marginRight: \"15px\" }}\r\n        >\r\n          Update\r\n        </Button>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nconst header = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n};\r\n\r\nconst getbody = {\r\n  token: localStorage.getItem(\"token\"),\r\n  active: true\r\n};\r\n\r\nexport const CreateQuestionApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3002_v1 + \"/create-question\",\r\n      data ? data : getbody,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/QuestionApi/ in CreateQuestionApi() for Adding New Question\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const GetAllQuestionsApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3002_v1 + \"/get-questions\",\r\n      data ? data : getbody,\r\n      header\r\n    )\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/QuestionApi/ in GetAllQuestionsApi() for Fetching All Question\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateQuestionApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3002_v1 + \"/update-question\",\r\n      data ? data : getbody,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/QuestionApi/ in UpdateQuestionApi() for Updating Existing Question\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const UpdateQuestionStatusApi = data => {\r\n  return axios\r\n  .post(\r\n    process.env.REACT_APP_PATH_URL_3002_v1 + \"/update-question-status\",\r\n    data,\r\n    header\r\n  )\r\n  .then(res => res.data)\r\n  .catch(error =>\r\n    console.log(\r\n      \"parsing failed at src/api/SkillApi in UpdateQuestionStatusApi() for Updating Skills Status\",\r\n      error\r\n    )\r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport Question from \"./Question\";\nimport SingleSelect from \"./SingleSelect\";\nimport MultiSelect from \"./MultiSelect\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport Skills from \"./Skills\";\nimport BottomButtons from \"./BottomButtons\";\nimport * as QuestionApi from \"api/QuestionApi\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nvar moment = require(\"moment\");\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    let selectedKey = \"0\";\n    let level = \"\";\n    if (this.props.selected_question.skills.length > 0)\n      level = this.props.selected_question.skills[0].level;\n    else if (this.props.selected_question.competencies.length > 0) {\n      level = this.props.selected_question.competencies[0].level;\n    } else if (this.props.selected_question.subCompetencies.length > 0){\n      level = this.props.selected_question.subCompetencies[0].level;\n    }\n    switch (this.props.selected_question.optionType) {\n      case \"radiogroup\":\n        selectedKey = \"1\";\n        break;\n      case \"checkbox\":\n        selectedKey = \"2\";\n        break;\n      case \"file\":\n        selectedKey = \"4\";\n        break;\n      case \"text\":\n        selectedKey = \"3\";\n        break;\n      default:\n        selectedKey = \"0\";\n    }\n    this.state = {\n      alert: null,\n      selectedQuestion: this.props.selected_question,\n      selectedKey: selectedKey,\n      currentlevel: level,\n      optionCount: this.props.selected_question.options.length\n    };\n  }\n  optionValue = [];\n  checkBoxValue = [];\n\n  changeKey = e => {\n    this.setState({ selectedKey: e.target.value });\n    this.setState({ optionCount: 3 });\n  };\n\n  cancelButton = e => {\n    this.setState({ selectedKey: \"0\" });\n  };\n\n  changeOptionCount = e => {\n    if (this.state.optionCount !== 1)\n      this.setState({ optionCount: this.state.optionCount + e });\n    if (this.state.optionCount === 1 && e === 1)\n      this.setState({ optionCount: this.state.optionCount + 1 });\n  };\n\n  submitQuestion = e => {\n    e.preventDefault();\n    let option = [];\n    let apioption = [];\n    let apicompetencies = [];\n    let apisubcompetencies = [];\n    let questiontype = \"radiogroup\";\n    if (e.target.expirydate.value !== \"\")\n      if (!moment(e.target.expirydate.value, \"YYYY-MM-DD\", true).isValid())\n        return;\n    switch (e.target.typeOfQuestion.value) {\n      case \"1\":\n        questiontype = \"radiogroup\";\n        for (var i = 0; i < this.state.optionCount; i++)\n          if (this.optionValue[i].value) {\n            option.push(this.optionValue[i].value);\n            if (e.target.answerType.value === \"notApplicable\") {\n              apioption.push({\n                label: this.optionValue[i].value,\n                id: `${i + 1}`,\n                value: `${i + 1}`,\n                answer: e.target.radiogroup.value === `${i + 1}` ? true : false\n              });\n            } else {\n              apioption.push({\n                label: this.optionValue[i].value,\n                id: `${i + 1}`,\n                answer: e.target.radiogroup.value === `${i + 1}` ? true : false\n              });\n            }\n          }\n        break;\n      case \"2\":\n        questiontype = \"checkbox\";\n        for (i = 0; i < this.state.optionCount; i++)\n          if (this.optionValue[i].value) {\n            option.push(this.optionValue[i].value);\n            let index = this.checkBoxValue.findIndex(\n              // eslint-disable-next-line\n              x => x.name === `${i + 1}`\n            );\n            if (e.target.answerType.value === \"notApplicable\") {\n              apioption.push({\n                label: this.optionValue[i].value,\n                id: `${i + 1}`,\n                value: i + 1,\n                answer: this.checkBoxValue[index]\n                  ? this.checkBoxValue[index].value\n                  : false\n              });\n            } else\n              apioption.push({\n                label: this.optionValue[i].value,\n                id: `${i + 1}`,\n                answer: this.checkBoxValue[index]\n                  ? this.checkBoxValue[index].value\n                  : false\n              });\n          }\n        break;\n      case \"3\":\n        questiontype = \"text\";\n        break;\n      case \"4\":\n        questiontype = \"file\";\n        break;\n      default:\n    }\n    if (this.props.selected_question.competencies.length > 0) {\n      apicompetencies.push({\n        id:\n          e.target.competency.value !== \"0\"\n            ? e.target.competency.value\n            : this.props.selected_question.competencies[0].id,\n        level: e.target.level.value\n      });\n      apisubcompetencies = \"\";\n    } else {\n      apisubcompetencies.push({\n        id:\n          e.target.subcompetency.value !== \"0\"\n            ? e.target.subcompetency.value\n            : this.props.selected_question.subCompetencies[0].id,\n        level: e.target.level.value\n      });\n      apicompetencies = \"\";\n    }\n    QuestionApi.UpdateQuestionApi({\n      token: localStorage.getItem(\"token\"),\n      title: e.target.questionName.value,\n      questionId: this.props.selected_question.id,\n      titleMedia: \"\",\n      optionType: questiontype,\n      answerType: e.target.answerType.value,\n      skills: [],\n      competencies: apicompetencies,\n      subCompetencies: apisubcompetencies,\n      options: apioption,\n      state: \"approved\",\n      expiresAt: e.target.expirydate.value,\n      weightage: 1\n    }).then(res => {\n      if (res.code === \"0\")\n        this.setState({\n          alert: (\n            <SweetAlert\n              success\n              title=\"Question Updated Successfully\"\n              onConfirm={() => {\n                this.setState({ alert: null });\n                this.props.onHide();\n              }}\n            />\n          )\n        });\n    });\n  };\n\n  renderSwitch = key => {\n    const items = [];\n    this.optionValue.length = 0;\n    switch (key) {\n      case \"1\":\n        for (let i = 1; i <= this.state.optionCount; i++) {\n          if (i <= this.props.selected_question.options.length)\n            items.push(\n              <SingleSelect\n                key={i}\n                name={i}\n                optionId={this.props.selected_question.options[i - 1].id}\n                optionLabel={this.props.selected_question.options[i - 1].label}\n                optionRightStatus={\n                  this.props.selected_question.options[i - 1].answer\n                }\n                optionValue={this.optionValue}\n                selectValue={i}\n                changeOptionCount={this.changeOptionCount}\n              />\n            );\n          else\n            items.push(\n              <SingleSelect\n                key={i}\n                name={i}\n                optionValue={this.optionValue}\n                selectValue={i}\n                changeOptionCount={this.changeOptionCount}\n              />\n            );\n        }\n        return items;\n      case \"2\":\n        for (let i = 1; i <= this.state.optionCount; i++)\n          if (i <= this.props.selected_question.options.length)\n            items.push(\n              <MultiSelect\n                key={i}\n                name={i}\n                optionId={this.props.selected_question.options[i - 1].id}\n                optionLabel={this.props.selected_question.options[i - 1].label}\n                optionRightStatus={\n                  this.props.selected_question.options[i - 1].answer\n                }\n                selectValue={i}\n                checkBoxValue={this.checkBoxValue}\n                optionValue={this.optionValue}\n                changeOptionCount={this.changeOptionCount}\n              />\n            );\n          else\n            items.push(\n              <MultiSelect\n                key={i}\n                name={i}\n                selectValue={i}\n                checkBoxValue={this.checkBoxValue}\n                optionValue={this.optionValue}\n                changeOptionCount={this.changeOptionCount}\n              />\n            );\n        return items;\n      default:\n        return;\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"content\">\n          <Grid fluid>\n            <Row>\n              <Col md={12}>\n                <Card\n                  content={\n                    <form\n                      className=\"question-form\"\n                      onSubmit={this.submitQuestion}\n                    >\n                      <Row className=\"grey-background\">\n                        <Question\n                          changeKey={this.changeKey}\n                          selectedKey={this.state.selectedKey}\n                          questionTitle={this.props.selected_question.title}\n                        />\n                      </Row>\n                      {this.state.selectedKey !== \"0\" ? (\n                        <Fragment>\n                          <Row\n                            className=\"grey-background\"\n                            style={{ paddingLeft: \"15px\" }}\n                          >\n                            <Skills\n                              level={this.state.currentlevel}\n                              answerType={\n                                this.props.selected_question.answerType\n                              }\n                              expiryDate={\n                                this.props.selected_question.expiresAt\n                              }\n                            />\n                            {this.renderSwitch(this.state.selectedKey)}\n                          </Row>\n                        </Fragment>\n                      ) : (\n                        \"\"\n                      )}\n                      <BottomButtons />\n                    </form>\n                  }\n                />\n              </Col>\n            </Row>\n          </Grid>\n        </div>\n        {this.state.alert}\n      </Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport QuestionDashboard from \"./Dashboard\";\r\nexport default class AuthorEditQuestion extends Component {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        bsSize=\"large\"\r\n        aria-labelledby=\"contained-modal-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-lg\">\r\n            Edit Single Question\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <QuestionDashboard\r\n            selected_question={this.props.selected_question}\r\n            onHide={this.props.onHide}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Modal, Grid, Row, Col, FormControl, FormGroup } from \"react-bootstrap\";\r\nimport CustomButton from \"components/CustomButton/CustomButton\";\r\nimport * as QuestionApi from \"../../../api/QuestionApi\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nexport default class EvaluatorEditQuestions extends Component {\r\n  state = {\r\n    questionState: \"\",\r\n    optionType: \"\",\r\n    questionId: \"\",\r\n    checkboxOn: \"\",\r\n    alert: null\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.selected_question.state !== \"temp\") {\r\n      this.setState({\r\n        questionState: this.props.selected_question.state,\r\n        optionType: this.props.selected_question.optionType,\r\n        questionId: this.props.selected_question.id,\r\n        checkboxOn: this.props.selected_question.state === \"approved\"\r\n      });\r\n    }\r\n  }\r\n\r\n  changeCheckboxStatus = () => {\r\n    this.setState({ checkboxOn: !this.state.checkboxOn });\r\n  };\r\n\r\n  changeQuestionStatus = e => {\r\n    e.preventDefault();\r\n    let state = \"draft\";\r\n    if (this.state.checkboxOn) state = \"approved\";\r\n    QuestionApi.UpdateQuestionApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      questionId: this.state.questionId,\r\n      state: state,\r\n      optionType: this.state.optionType,\r\n      comments: e.target.reviews.value\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        this.setState({\r\n          alert: (\r\n            <SweetAlert\r\n              success\r\n              title=\"Question Updated Successfully\"\r\n              onConfirm={() => {\r\n                this.setState({ alert: null });\r\n                this.props.onHide()\r\n              }}\r\n            />\r\n          )\r\n        });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          {...this.props}\r\n          bsSize=\"large\"\r\n          aria-labelledby=\"contained-modal-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-lg\">\r\n              Evaluate Question\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"content\">\r\n              <Grid fluid>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <form\r\n                      onSubmit={this.changeQuestionStatus}\r\n                      style={{ padding: \"20px\" }}\r\n                    >\r\n                      <h5>Approved Status:</h5>\r\n                      <label className=\"editquestionswitch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={this.state.checkboxOn}\r\n                          onChange={this.changeCheckboxStatus}\r\n                          name=\"questionStatus\"\r\n                        />\r\n                        <span className=\"editquestionslider round\" />\r\n                      </label>\r\n                      <h5>Comments:</h5>\r\n                      <FormGroup controlId=\"formControlsTextarea\">\r\n                        <FormControl\r\n                          componentClass=\"textarea\"\r\n                          name=\"reviews\"\r\n                          placeholder=\"Add Your Reviews\"\r\n                        />\r\n                      </FormGroup>\r\n                      <CustomButton bsStyle=\"info\" fill type=\"submit\">\r\n                        Submit\r\n                      </CustomButton>\r\n                    </form>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n        {this.state.alert}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class UnAuthorized extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"errorWrapper\">\r\n        <div id=\"error403\" />\r\n        <p id=\"errorText\">\r\n          <span className=\"red\">error 403</span>\r\n          <br /> access denied\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Grid } from \"react-bootstrap\";\r\nimport EvaluatorEditQuestions from \"./EvaluatorEditQuestions\";\r\nimport UnAuthorized from \"../../UnAuthorized/UnAuthorized\";\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              {JSON.parse(localStorage.getItem(\"user_role\")).includes(\r\n                \"UassessAdmin\"\r\n              ) ||\r\n              JSON.parse(localStorage.getItem(\"user_role\")).includes(\r\n                \"Evaluator\"\r\n              ) ? (\r\n                <EvaluatorEditQuestions\r\n                  show={this.props.show}\r\n                  onHide={this.props.onHide}\r\n                  selected_question={this.props.selected_question}\r\n                />\r\n              ) : (\r\n                <UnAuthorized />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport AuthorEditQuestion from \"./AuthorEditQuestions/AuthorEditQuestion\";\r\nimport EvaluatorEditQuestions from \"./EvaluatorEditQuestions/Index\";\r\nimport moment from \"moment\";\r\nimport * as QuestionApi from \"../../api/QuestionApi\";\r\n\r\nexport default class ShowAllQuestion extends Component {\r\n  state = {\r\n    alert: null,\r\n    lgShow: false,\r\n    evalLgShow: false,\r\n    selectedQuestion: [{ state: \"temp\" }]\r\n  };\r\n\r\n  editAuthorQuestion = e => {\r\n    const selectedQuestion = this.props.questions.filter(\r\n      data => data.id === e.target.id\r\n    );\r\n    this.setState({ lgShow: true, selectedQuestion: selectedQuestion });\r\n  };\r\n\r\n  editEvaluatorQuestion = e => {\r\n    const selectedQuestion = this.props.questions.filter(\r\n      data => data.id === e.target.id\r\n    );\r\n    this.setState({ evalLgShow: true, selectedQuestion: selectedQuestion });\r\n  };\r\n\r\n  deleteQuestion = e => {\r\n    e.persist();\r\n    this.setState({\r\n      alert: (\r\n        <SweetAlert\r\n          warning\r\n          showCancel\r\n          confirmBtnText=\"Yes, delete it!\"\r\n          confirmBtnBsStyle=\"danger\"\r\n          cancelBtnBsStyle=\"default\"\r\n          title=\"Are you sure?\"\r\n          onConfirm={() => {\r\n            QuestionApi.UpdateQuestionStatusApi({\r\n              token: localStorage.getItem(\"token\"),\r\n              questionId: e.target.id,\r\n              active: false\r\n            }).then(res => {\r\n              if (res.code === \"0\") {\r\n                this.setState({\r\n                  alert: (\r\n                    <SweetAlert\r\n                      success\r\n                      title=\"Question Deleted Successfully!\"\r\n                      onConfirm={() => {\r\n                        this.setState({ alert: null });\r\n                      }}\r\n                    />\r\n                  )\r\n                });\r\n                let x = this.props.questions.filter(\r\n                  data => data.id !== e.target.id\r\n                );\r\n                this.props.updateQuestion(x);\r\n              }\r\n            });\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({ alert: null });\r\n          }}\r\n        >\r\n          You will not be able to recover this questions\r\n        </SweetAlert>\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let lgClose = () => this.setState({ lgShow: false });\r\n    let evalLgClose = () => {\r\n      this.setState({\r\n        evalLgShow: false\r\n      });\r\n    };\r\n    if (JSON.parse(localStorage.getItem(\"AdminStatus\")))\r\n      return (\r\n        <Fragment>\r\n          <Table striped hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Sr No.</th>\r\n                <th>Title</th>\r\n                <th>Answer Type</th>\r\n                <th>Option Type</th>\r\n                <th>Created At</th>\r\n                <th>Expires At</th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.questions.map((data, key) => {\r\n                return (\r\n                  <tr key={key}>\r\n                    <td>\r\n                      <i\r\n                        className=\"fa fa-circle\"\r\n                        aria-hidden=\"true\"\r\n                        style={{\r\n                          color:\r\n                            data.state === \"approved\" ? \"#4CAF50\" : \"#FF9800\"\r\n                        }}\r\n                      />\r\n                      {key + 1}\r\n                    </td>\r\n                    <td>{data.title}</td>\r\n                    <td>{data.answerType}</td>\r\n                    <td>{data.optionType}</td>\r\n                    <td>{moment(data.createdAt).format(\"DD-MM-YYYY\")}</td>\r\n                    <td>{moment(data.expiresAt).format(\"DD-MM-YYYY\")}</td>\r\n                    <td\r\n                      style={{\r\n                        maxWidth: \"100%\",\r\n                        whiteSpace: \"nowrap\"\r\n                      }}\r\n                    >\r\n                      <i\r\n                        className=\"fa fa-edit fa-2x table-icon\"\r\n                        id={data.id}\r\n                        onClick={this.editAuthorQuestion}\r\n                      />\r\n                      <i\r\n                        className=\"fa fa-gears fa-2x table-icon\"\r\n                        id={data.id}\r\n                        onClick={this.editEvaluatorQuestion}\r\n                      />\r\n                      <i\r\n                        className=\"fa fa-trash fa-2x table-icon\"\r\n                        id={data.id}\r\n                        onClick={this.deleteQuestion}\r\n                        style={{ marginTop: \"-10px\" }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n          {this.state.lgShow && (\r\n            <AuthorEditQuestion\r\n              show={this.state.lgShow}\r\n              onHide={lgClose}\r\n              selected_question={this.state.selectedQuestion[0]}\r\n            />\r\n          )}\r\n          {this.state.evalLgShow && (\r\n            <EvaluatorEditQuestions\r\n              show={this.state.evalLgShow}\r\n              onHide={evalLgClose}\r\n              selected_question={this.state.selectedQuestion[0]}\r\n            />\r\n          )}\r\n          {this.state.alert}\r\n        </Fragment>\r\n      );\r\n    else if (JSON.parse(localStorage.getItem(\"SelectedSkills\")))\r\n      return (\r\n        <Fragment>\r\n          {JSON.parse(localStorage.getItem(\"SelectedSkills\")).length ? (\r\n            <Table striped hover responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Sr No.</th>\r\n                  <th>Title</th>\r\n                  <th>Answer Type</th>\r\n                  <th>Option Type</th>\r\n                  <th>Created At</th>\r\n                  <th>Expires At</th>\r\n                  <th />\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.questions.map((data, key) => {\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>\r\n                        <i\r\n                          className=\"fa fa-circle\"\r\n                          aria-hidden=\"true\"\r\n                          style={{\r\n                            color:\r\n                              data.state === \"approved\" ? \"#4CAF50\" : \"#FF9800\"\r\n                          }}\r\n                        />\r\n                        {key + 1}\r\n                      </td>\r\n                      <td>{data.title}</td>\r\n                      <td>{data.answerType}</td>\r\n                      <td>{data.optionType}</td>\r\n                      <td>{moment(data.createdAt).format(\"DD-MM-YYYY\")}</td>\r\n                      <td>{moment(data.expiresAt).format(\"DD-MM-YYYY\")}</td>\r\n                      <td\r\n                        style={{\r\n                          maxWidth: \"100%\",\r\n                          whiteSpace: \"nowrap\"\r\n                        }}\r\n                      >\r\n                        <i\r\n                          className=\"fa fa-edit fa-2x table-icon\"\r\n                          id={data.id}\r\n                          onClick={this.editAuthorQuestion}\r\n                        />\r\n                        <i\r\n                          className=\"fa fa-edit fa-2x table-icon\"\r\n                          id={data.id}\r\n                          onClick={this.editEvaluatorQuestion}\r\n                        />\r\n                        <i\r\n                          className=\"fa fa-trash fa-2x table-icon\"\r\n                          id={data.id}\r\n                          onClick={this.deleteQuestion}\r\n                          style={{ marginTop: \"-10px\" }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            <h2>Please select the skills in which you want to contribute</h2>\r\n          )}\r\n          {this.state.lgShow && (\r\n            <AuthorEditQuestion\r\n              show={this.state.lgShow}\r\n              onHide={lgClose}\r\n              selected_question={this.state.selectedQuestion[0]}\r\n            />\r\n          )}\r\n          {this.state.alert}\r\n        </Fragment>\r\n      );\r\n    else return null;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Row, ControlLabel } from \"react-bootstrap\";\r\nconst Tag = props => <span className=\"tag\" {...props} />;\r\nconst Delete = props => <input value=\"  X\" readOnly className=\"delete\" {...props} />;\r\n\r\nexport default class TagsInput extends React.Component {\r\n  state = {\r\n    newTag: \"\"\r\n  };\r\n\r\n  handleRemoveTag = e => {\r\n    e.preventDefault();\r\n    let tag = e.target.parentNode.textContent.trim();\r\n    this.props.removeTag(tag)\r\n    this.setState({ newTag: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <ControlLabel>{this.props.label}</ControlLabel>\r\n        <div className=\"col-md-12 tags-input question-dropdown\">\r\n          {this.props.value.map((tag, index) => (\r\n            <Tag key={index}>\r\n              {tag}\r\n              <Delete onClick={this.handleRemoveTag} />\r\n            </Tag>\r\n          ))}\r\n        </div>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  FormGroup,\r\n  ControlLabel,\r\n  Modal,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport * as SkillsApi from \"api/SkillApi\";\r\nimport TagsInput from \"../../components/TagInput/TagsInput\";\r\n\r\nexport default class SkillSelection extends Component {\r\n  state = {\r\n    skill_list: [],\r\n    skills_dropdown: [],\r\n    tags: []\r\n  };\r\n\r\n  updateTags = e => {\r\n    if (e.target.value !== \"0\") {\r\n      const x = this.state.skill_list.filter(\r\n        data => data.id === e.target.value\r\n      )[0].label;\r\n      if (!this.state.tags.includes(x))\r\n        this.setState({\r\n          tags: [...this.state.tags, x]\r\n        });\r\n    }\r\n  };\r\n\r\n  removeTags = e => {\r\n    let index = this.state.tags.indexOf(e);\r\n    this.setState({\r\n      tags: this.state.tags.filter((_, i) => i !== index)\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    let x = [];\r\n    for (let i = 0; i < this.state.tags.length; i++) {\r\n      x = this.state.skill_list.filter(\r\n        data => data.label === this.state.tags[i]\r\n      );\r\n    }\r\n    this.props.onHide(x);\r\n  };\r\n\r\n  componentDidMount() {\r\n    SkillsApi.GetSkillsApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      active: true\r\n    }).then(res => {\r\n      if (res.code === \"0\")\r\n        this.setState({\r\n          skill_list: res.data,\r\n          skills_dropdown: res.data.map(result => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        bsSize=\"large\"\r\n        aria-labelledby=\"contained-modal-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-lg\">\r\n            Select The Skills In Which You Want To Contribute..\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"content\">\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <ControlLabel>List Of Skills:</ControlLabel>\r\n                    <FormControl\r\n                      componentClass=\"select\"\r\n                      bsClass=\"form-control question-dropdown\"\r\n                      name=\"skillselected\"\r\n                      onChange={this.updateTags}\r\n                    >\r\n                      <option value=\"0\">Select Type</option>\r\n                      {this.state.skills_dropdown.map(data => {\r\n                        return data;\r\n                      })}\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <TagsInput\r\n                value={this.state.tags}\r\n                removeTag={this.removeTags}\r\n                label=\"Existing Competency for Selected Skills:\"\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.handleClose}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\nimport { Grid, Row, Col, FormControl } from \"react-bootstrap\";\nimport { Card } from \"../../components/Card/Card\";\nimport ShowAllQuestion from \"./ShowAllQuestion\";\nimport Skeleton from \"react-loading-skeleton\";\nimport SkillSelection from \"./SkillSelection\";\nimport * as QuestionApi from \"../../api/QuestionApi\";\n\nexport default class Dashboard extends Component {\n  state = {\n    isLoading: true,\n    question: [],\n    lgShow: JSON.parse(localStorage.getItem(\"SelectSkill\")),\n    filterParameter: \"\"\n  };\n\n  lgClose = tags => {\n    this.setState({ lgShow: false });\n    localStorage.setItem(\"SelectSkill\", false);\n    localStorage.setItem(\"SelectedSkills\", JSON.stringify(tags));\n  };\n\n  updateQuestion = x => {\n    this.setState(() => {\n      return {\n        question: x\n      };\n    });\n  };\n\n  componentDidMount() {\n    if (!JSON.parse(localStorage.getItem(\"user_role\")).includes(\"UassessAdmin\"))\n      this.setState(prevState => {\n        return { lgShow: JSON.parse(localStorage.getItem(\"SelectSkill\")) };\n      });\n    QuestionApi.GetAllQuestionsApi({\n      token: localStorage.getItem(\"token\"),\n      active: true\n    }).then(res => {\n      if (\n        JSON.parse(localStorage.getItem(\"user_role\")).includes(\"UassessAdmin\")\n      )\n        this.setState({\n          question: res.data,\n          isLoading: false\n        });\n      else if (\n        JSON.parse(localStorage.getItem(\"user_role\")).includes(\"Evaluator\")\n      ) {\n        let x = res.data.filter(result => result.state === \"draft\");\n        this.setState({\n          question: x,\n          isLoading: false\n        });\n      } else\n        this.setState({\n          question: res.data.filter(\n            result => result.createdBy === localStorage.getItem(\"user_id\")\n          ),\n          isLoading: false\n        });\n    });\n  }\n\n  render() {\n    let filteredQuestion = this.state.question.filter(result => {\n      return (\n        result.title\n          .toLowerCase()\n          .indexOf(this.state.filterParameter.toLowerCase()) !== -1\n      );\n    });\n    return (\n      <Fragment>\n        <div className=\"content\">\n          <Grid fluid>\n            <Row>\n              <Col md={4} style={{ marginBottom: \"10px\" }}>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Filter Question\"\n                  bsClass=\"form-control question-dropdown\"\n                  value={this.state.filterParameter}\n                  onChange={e =>\n                    this.setState({\n                      filterParameter: e.target.value\n                    })\n                  }\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col md={12}>\n                <Card\n                  skills=\"true\"\n                  noPadding\n                  content={\n                    <Fragment>\n                      {this.state.isLoading ? (\n                        <Fragment>\n                          <Skeleton count={5} />\n                          <h3>\n                            <Skeleton />\n                          </h3>\n                          <h3>\n                            <Skeleton />\n                          </h3>\n                          <h3>\n                            <Skeleton />\n                          </h3>\n                          <h3>\n                            <Skeleton />\n                          </h3>\n                        </Fragment>\n                      ) : (\n                        <ShowAllQuestion\n                          questions={filteredQuestion}\n                          updateQuestion={this.updateQuestion}\n                        />\n                      )}\n                    </Fragment>\n                  }\n                />\n              </Col>\n            </Row>\n          </Grid>\n        </div>\n        <SkillSelection show={this.state.lgShow} onHide={this.lgClose} />\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { Row, Col, Grid } from \"react-bootstrap\";\r\nimport UnAuthorized from \"../UnAuthorized/UnAuthorized\";\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              {JSON.parse(localStorage.getItem(\"user_role\")).includes(\r\n                \"UassessAdmin\"\r\n              ) ||\r\n              JSON.parse(localStorage.getItem(\"user_role\")).includes(\r\n                \"Author\"\r\n              ) ? (\r\n                <Dashboard />\r\n              ) : (\r\n                <UnAuthorized />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Grid, Col, FormControl, FormGroup } from \"react-bootstrap\";\r\n\r\nexport default class Question extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={1}>\r\n              <p>Q{this.props.questionNo}.</p>\r\n            </Col>\r\n            <FormGroup>\r\n              <Col md={8} style={{ paddingRight: \"0px\" }}>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  bsClass=\"form-control question-dropdown\"\r\n                  placeholder=\"Enter your question\"\r\n                  name=\"questionName\"\r\n                  required\r\n                />\r\n              </Col>\r\n              <Col md={3} style={{ paddingLeft: \"0px\" }}>\r\n                <FormControl\r\n                  componentClass=\"select\"\r\n                  bsClass=\"form-control question-dropdown\"\r\n                  name=\"typeOfQuestion\"\r\n                  onChange={this.props.changeKey}\r\n                  value={this.props.selectedKey}\r\n                >\r\n                  <option value=\"0\">Select Type</option>\r\n                  <option value=\"1\">Single Select</option>\r\n                  <option value=\"2\">Multi Select</option>\r\n                  <option value=\"3\">Text Area</option>\r\n                  <option value=\"4\">Video Question</option>\r\n                </FormControl>\r\n              </Col>\r\n            </FormGroup>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Grid,\r\n  FormControl,\r\n  FormGroup,\r\n  InputGroup\r\n} from \"react-bootstrap\";\r\n\r\nexport default class MultipleChoice extends Component {\r\n  render() {\r\n    return (\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col md={10}>\r\n            <FormGroup>\r\n              <InputGroup>\r\n                <InputGroup.Addon>\r\n                  <input\r\n                    type=\"radio\"\r\n                    aria-label=\"...\"\r\n                    value={this.props.selectValue}\r\n                    name=\"radiogroup\"\r\n                  />\r\n                </InputGroup.Addon>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Enter an answer choice\"\r\n                  bsClass=\"form-control question-dropdown\"\r\n                  inputRef={element =>\r\n                    element ? this.props.optionValue.push(element) : \"\"\r\n                  }\r\n                  required\r\n                />\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <i\r\n              className=\"fa fa-plus-circle fa-2x option-icon\"\r\n              aria-hidden=\"true\"\r\n              onClick={this.props.changeOptionCount.bind(this, 1)}\r\n            />\r\n            &emsp;&emsp;\r\n            <i\r\n              className=\"fa fa-minus-circle fa-2x option-icon\"\r\n              aria-hidden=\"true\"\r\n              onClick={this.props.changeOptionCount.bind(this, -1)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Grid,\r\n  FormControl,\r\n  FormGroup,\r\n  InputGroup\r\n} from \"react-bootstrap\";\r\n\r\nexport default class Checkbox extends Component {\r\n  handleChange = e => {\r\n    let found = 0;\r\n    if (this.props.checkBoxValue.length > 0) {\r\n      for (let i = 0; i < this.props.checkBoxValue.length; i++)\r\n        if (this.props.checkBoxValue[i].name === e.target.value) {\r\n          this.props.checkBoxValue[i].value = e.target.checked;\r\n          found = 1;\r\n          break;\r\n        }\r\n      if (found === 0)\r\n        this.props.checkBoxValue.push({\r\n          name: e.target.value,\r\n          value: e.target.checked\r\n        });\r\n    } else\r\n      this.props.checkBoxValue.push({\r\n        name: e.target.value,\r\n        value: e.target.checked\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col md={10}>\r\n            <FormGroup>\r\n              <InputGroup>\r\n                <InputGroup.Addon>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    aria-label=\"...\"\r\n                    value={this.props.selectValue}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputGroup.Addon>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Enter an answer choice\"\r\n                  bsClass=\"form-control question-dropdown\"\r\n                  inputRef={element =>\r\n                    element ? this.props.optionValue.push(element) : \"\"\r\n                  }\r\n                  required\r\n                />\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <i\r\n              className=\"fa fa-plus-circle fa-2x option-icon\"\r\n              aria-hidden=\"true\"\r\n              onClick={this.props.changeOptionCount.bind(this, 1)}\r\n            />\r\n            &emsp;&emsp;\r\n            <i\r\n              className=\"fa fa-minus-circle fa-2x option-icon\"\r\n              aria-hidden=\"true\"\r\n              onClick={this.props.changeOptionCount.bind(this, -1)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nexport default class BottomButtons extends Component {\r\n  render() {\r\n    return (\r\n      <Row style={{ padding: \"15px\" }} >\r\n        <Button bsStyle=\"info\" fill type=\"submit\">\r\n          Next Question\r\n        </Button>\r\n        <Button pullRight fill onClick={this.props.cancelButton}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          bsStyle=\"info\"\r\n          pullRight\r\n          fill\r\n          type=\"submit\"\r\n          style={{ marginRight: \"15px\" }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Grid, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport * as SkillsApi from \"../../api/SkillApi\";\r\nimport * as CompetencyApi from \"../../api/CompetencyApi\";\r\nimport * as SubCompetencyApi from \"../../api/SubCompetencyApi\";\r\nimport * as LevelApi from \"../../api/LevelApi\";\r\n\r\nexport default class Skills extends Component {\r\n  state = {\r\n    skills_dropdown: [],\r\n    competencies_dropdown: [],\r\n    subCompetencies_dropdown: [],\r\n    level_dropdown: []\r\n  };\r\n\r\n  getCompetencies = e => {\r\n    let competencies = [];\r\n    for (let i = 0; i < this.state.skills_dropdown.length; i++) {\r\n      if (this.state.skills_dropdown[i].skillId === e.target.value) {\r\n        competencies = this.state.skills_dropdown[i].competencyIds;\r\n        break;\r\n      }\r\n    }\r\n    if (competencies.length > 0)\r\n      CompetencyApi.GetCompetenciesApi({\r\n        token: localStorage.getItem(\"token\"),\r\n        active: true,\r\n        ids: competencies\r\n      }).then(res => {\r\n        if (res.code === \"0\")\r\n          this.setState({\r\n            competencies_dropdown: res.data.map((result, key) => {\r\n              return {\r\n                subCompetencyIds: result.subCompetencyIds,\r\n                competencyId: result.id,\r\n                select: (\r\n                  <option value={result.id} key={result.id}>\r\n                    {result.label}\r\n                  </option>\r\n                )\r\n              };\r\n            })\r\n          });\r\n      });\r\n  };\r\n\r\n  getSubCompetencies = e => {\r\n    let subcompetencies = [];\r\n    for (let i = 0; i < this.state.competencies_dropdown.length; i++) {\r\n      if (this.state.competencies_dropdown[i].competencyId === e.target.value) {\r\n        subcompetencies = this.state.competencies_dropdown[i].subCompetencyIds;\r\n        break;\r\n      }\r\n    }\r\n    if (subcompetencies.length > 0)\r\n      SubCompetencyApi.GetSubCompetenciesApi({\r\n        token: localStorage.getItem(\"token\"),\r\n        active: true,\r\n        ids: subcompetencies\r\n      }).then(res => {\r\n        if (res.code === \"0\")\r\n          this.setState({\r\n            subCompetencies_dropdown: res.data.map((result, key) => {\r\n              return {\r\n                subCompetencyId: result.id,\r\n                select: (\r\n                  <option value={result.id} key={result.id}>\r\n                    {result.label}\r\n                  </option>\r\n                )\r\n              };\r\n            })\r\n          });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (\r\n      JSON.parse(localStorage.getItem(\"user_role\")).includes(\"UassessAdmin\")\r\n    ) {\r\n      SkillsApi.GetSkillsApi().then(res => {\r\n        if (res.code === \"0\")\r\n          this.setState({\r\n            skills_dropdown: res.data.map((result, key) => {\r\n              return {\r\n                competencyIds: result.competencyIds,\r\n                skillId: result.id,\r\n                select: (\r\n                  <option value={result.id} key={result.id}>\r\n                    {result.label}\r\n                  </option>\r\n                )\r\n              };\r\n            })\r\n          });\r\n      });\r\n    } else {\r\n      let x = JSON.parse(localStorage.getItem(\"SelectedSkills\"));\r\n      this.setState({\r\n        skills_dropdown: x.map((result, key) => {\r\n          return {\r\n            competencyIds: result.competencyIds,\r\n            skillId: result.id,\r\n            select: (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            )\r\n          };\r\n        })\r\n      });\r\n    }\r\n    LevelApi.GetLevelApi().then(res => {\r\n      if (res.code === \"0\")\r\n        this.setState({\r\n          level_dropdown: res.data.map(result => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Skills</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"skill\"\r\n              onChange={this.getCompetencies}\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              {this.state.skills_dropdown.map((data, key) => {\r\n                return data.select;\r\n              })}\r\n            </FormControl>\r\n          </Col>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Competencies</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"competency\"\r\n              onChange={this.getSubCompetencies}\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              {this.state.competencies_dropdown.map((data, key) => {\r\n                return data.select;\r\n              })}\r\n            </FormControl>\r\n          </Col>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Sub-Competencies</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"subcompetency\"\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              {this.state.subCompetencies_dropdown.map((data, key) => {\r\n                return data.select;\r\n              })}\r\n            </FormControl>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Level</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"level\"\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              {this.state.level_dropdown}\r\n            </FormControl>\r\n          </Col>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Select Answer Type</ControlLabel>\r\n            <FormControl\r\n              componentClass=\"select\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"answerType\"\r\n            >\r\n              <option value=\"0\">Select Type</option>\r\n              <option value=\"correctAnswer\">Correct Answer</option>\r\n              <option value=\"notApplicable\">Not Applicable</option>\r\n            </FormControl>\r\n          </Col>\r\n          <Col md={4} style={{ paddingLeft: \"0px\" }}>\r\n            <ControlLabel>Expiry Date</ControlLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"YYYY-MM-DD\"\r\n              bsClass=\"form-control question-dropdown\"\r\n              name=\"expirydate\"\r\n              required\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport Question from \"./Question\";\nimport SingleSelect from \"./SingleSelect\";\nimport MultiSelect from \"./MultiSelect\";\nimport BottomButtons from \"./BottomButtons\";\nimport { Card } from \"../../components/Card/Card.jsx\";\nimport Skills from \"./Skills\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport * as QuestionApi from \"../../api/QuestionApi\";\nimport * as Survey from \"survey-react\";\nvar moment = require(\"moment\");\n\nclass Dashboard extends Component {\n  optionValue = [];\n  checkBoxValue = [];\n  state = {\n    alert: null,\n    selectedKey: \"0\",\n    questionCount: 1,\n    optionCount: 3,\n    surveyjsjson: {\n      pages: [\n        {\n          elements: []\n        }\n      ]\n    }\n  };\n\n  changeKey = e => {\n    this.setState({ selectedKey: e.target.value });\n    this.setState({ optionCount: 3 });\n  };\n\n  cancelButton = e => {\n    this.setState({ selectedKey: \"0\" });\n  };\n\n  changeOptionCount = e => {\n    if (this.state.optionCount !== 1)\n      this.setState({ optionCount: this.state.optionCount + e });\n    if (this.state.optionCount === 1 && e === 1)\n      this.setState({ optionCount: this.state.optionCount + 1 });\n  };\n\n  submitQuestion = e => {\n    e.preventDefault();\n    let option = [];\n    let apioption = [];\n    let apicompetencies = [];\n    let apisubcompetencies = [];\n    let questiontype = \"radiogroup\";\n    if (!moment(e.target.expirydate.value, \"YYYY-MM-DD\", true).isValid()) {\n      this.setState({\n        alert: (\n          <SweetAlert\n            danger\n            title=\"Please Enter Proper Expiry Date\"\n            onConfirm={() => {\n              this.setState({ alert: null });\n            }}\n          />\n        )\n      });\n      return;\n    }\n    if (e.target.skill.value === \"0\" || e.target.competency.value === \"0\") {\n      this.setState({\n        alert: (\n          <SweetAlert\n            danger\n            title=\"Please Select Proper Skills and Competency\"\n            onConfirm={() => {\n              this.setState({ alert: null });\n            }}\n          />\n        )\n      });\n      return;\n    }\n    if (e.target.level.value === \"0\") {\n      this.setState({\n        alert: (\n          <SweetAlert\n            danger\n            title=\"Please Select A Level\"\n            onConfirm={() => {\n              this.setState({ alert: null });\n            }}\n          />\n        )\n      });\n      return;\n    }\n    if (e.target.answerType.value === \"0\") {\n      this.setState({\n        alert: (\n          <SweetAlert\n            danger\n            title=\"Please Select An Answer-Type\"\n            onConfirm={() => {\n              this.setState({ alert: null });\n            }}\n          />\n        )\n      });\n      return;\n    }\n    switch (e.target.typeOfQuestion.value) {\n      case \"1\":\n        questiontype = \"radiogroup\";\n        for (var i = 0; i < this.state.optionCount; i++)\n          if (this.optionValue[i].value) {\n            option.push(this.optionValue[i].value);\n            if (e.target.answerType.value === \"notApplicable\") {\n              apioption.push({\n                label: this.optionValue[i].value,\n                id: `${i + 1}`,\n                value: `${i + 1}`,\n                answer: e.target.radiogroup.value === `${i + 1}` ? true : false\n              });\n            } else {\n              apioption.push({\n                label: this.optionValue[i].value,\n                id: `${i + 1}`,\n                answer: e.target.radiogroup.value === `${i + 1}` ? true : false\n              });\n            }\n          }\n        break;\n      case \"2\":\n        questiontype = \"checkbox\";\n        for (i = 0; i < this.state.optionCount; i++)\n          if (this.optionValue[i].value) {\n            option.push(this.optionValue[i].value);\n            let index = this.checkBoxValue.findIndex(\n              // eslint-disable-next-line\n              x => x.name === `${i + 1}`\n            );\n            if (e.target.answerType.value === \"notApplicable\") {\n              apioption.push({\n                label: this.optionValue[i].value,\n                id: `${i + 1}`,\n                value: i + 1,\n                answer: this.checkBoxValue[index]\n                  ? this.checkBoxValue[index].value\n                  : false\n              });\n            } else\n              apioption.push({\n                label: this.optionValue[i].value,\n                id: `${i + 1}`,\n                answer: this.checkBoxValue[index]\n                  ? this.checkBoxValue[index].value\n                  : false\n              });\n          }\n        break;\n      case \"3\":\n        questiontype = \"text\";\n        break;\n      case \"4\":\n        questiontype = \"file\";\n        break;\n      default:\n    }\n    const question = {\n      type: questiontype,\n      name: e.target.questionName.value,\n      choices: option\n    };\n    if (e.target.subcompetency.value === \"0\") {\n      apicompetencies.push({\n        id: e.target.competency.value,\n        level: e.target.level.value\n      });\n      apisubcompetencies = \"\";\n    } else {\n      apisubcompetencies.push({\n        id: e.target.subcompetency.value,\n        level: e.target.level.value\n      });\n      apicompetencies = \"\";\n    }\n    let list = this.state.surveyjsjson;\n    list.pages[0].elements.push(question);\n    QuestionApi.CreateQuestionApi({\n      token: localStorage.getItem(\"token\"),\n      title: e.target.questionName.value,\n      titleMedia: \"\",\n      optionType: questiontype,\n      answerType: e.target.answerType.value,\n      skills: [],\n      competencies: apicompetencies,\n      subCompetencies: apisubcompetencies,\n      options: apioption,\n      state: JSON.parse(localStorage.getItem(\"AdminStatus\")) ? \"approved\": \"draft\",\n      expiresAt: e.target.expirydate.value,\n      weightage: 1\n    }).then(res => {});\n    this.checkBoxValue.length = 0;\n    this.setState({\n      selectedKey: \"0\",\n      questionCount: this.state.questionCount + 1,\n      surveyjsjson: list\n    });\n  };\n\n  renderSwitch = key => {\n    const items = [];\n    this.optionValue.length = 0;\n    switch (key) {\n      case \"1\":\n        for (let i = 1; i <= this.state.optionCount; i++)\n          items.push(\n            <SingleSelect\n              key={i}\n              name={i}\n              optionValue={this.optionValue}\n              selectValue={i}\n              changeOptionCount={this.changeOptionCount}\n            />\n          );\n        return items;\n      case \"2\":\n        for (let i = 1; i <= this.state.optionCount; i++)\n          items.push(\n            <MultiSelect\n              key={i}\n              name={i}\n              selectValue={i}\n              checkBoxValue={this.checkBoxValue}\n              optionValue={this.optionValue}\n              changeOptionCount={this.changeOptionCount}\n            />\n          );\n        return items;\n      default:\n        return;\n    }\n  };\n\n  render() {\n    Survey.Survey.cssType = \"bootstrap\";\n    var model = new Survey.Model(this.state.surveyjsjson);\n    model.mode = \"display\";\n    return (\n      <Fragment>\n        <div className=\"content\">\n          <Grid fluid>\n            <Row>\n              <Col md={12}>\n                <Card\n                  header=\"true\"\n                  content={\n                    <div style={{ padding: \"5px 0px 5px 0px\" }}>\n                      {this.state.surveyjsjson.pages[0].elements.length > 0 ? (\n                        <div className=\"surveyjs\">\n                          <Survey.Survey model={model} />\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                      <Card\n                        question=\"true\"\n                        content={\n                          <form\n                            className=\"question-form\"\n                            onSubmit={this.submitQuestion}\n                          >\n                            <Row className=\"grey-background\">\n                              <Question\n                                changeKey={this.changeKey}\n                                questionNo={this.state.questionCount}\n                                selectedKey={this.state.selectedKey}\n                              />\n                            </Row>\n                            {this.state.selectedKey !== \"0\" ? (\n                              <Fragment>\n                                <Row\n                                  className=\"grey-background\"\n                                  style={{ paddingLeft: \"15px\" }}\n                                >\n                                  <Skills />\n                                  {this.renderSwitch(this.state.selectedKey)}\n                                </Row>\n                                <BottomButtons\n                                  cancelButton={this.cancelButton}\n                                />\n                              </Fragment>\n                            ) : (\n                              \"\"\n                            )}\n                          </form>\n                        }\n                      />\n                    </div>\n                  }\n                />\n              </Col>\n            </Row>\n          </Grid>\n        </div>\n        {this.state.alert}\n      </Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Grid } from \"react-bootstrap\";\r\nimport CreateQuestions from \"./CreateQuestions\";\r\nimport UnAuthorized from \"../UnAuthorized/UnAuthorized\";\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    let role = JSON.parse(localStorage.getItem(\"user_role\"));\r\n    let found = 0;\r\n    for (let i = 0; i < role.length; i++) {\r\n      if (role[i] === \"UassessAdmin\" || role[i] === \"Author\") found = 1;\r\n    }\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>{found ? <CreateQuestions /> : <UnAuthorized />}</Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"components/CustomButton/CustomButton\";\r\n\r\nexport default class SubmitButton extends Component {\r\n  render() {\r\n    return (\r\n      <Button\r\n        bsStyle=\"info\"\r\n        fill\r\n        block\r\n        type=\"submit\"\r\n        style={{\r\n          fontSize: \"15px\",\r\n          marginTop: \"20px\"\r\n        }}\r\n      >\r\n        <i className=\"fa fa-paper-plane fa-lg\" />\r\n        &nbsp;&nbsp;&nbsp; {this.props.buttonName}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  FormGroup,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card\";\r\nimport SubmitButton from \"components/CustomButton/SubmitButton\";\r\nimport TagsInput from \"../../components/TagInput/TagsInput\";\r\nimport * as SkillsApi from \"../../api/SkillApi\";\r\n\r\nexport default class Skills extends Component {\r\n  state = {\r\n    new_skills_label: [],\r\n    new_skills_description: [],\r\n    no_of_new_skills: \"\",\r\n    skills_dropdown: [],\r\n    competency_dropdown: [],\r\n    tags: [],\r\n    active_status: false,\r\n    tempDesc: \"\"\r\n  };\r\n\r\n  addNewSkills = e => {\r\n    e.preventDefault();\r\n    let skill_label = [];\r\n    for (let i = 0; i < this.state.new_skills_label.length; i++)\r\n      if (\r\n        this.state.new_skills_description[i].value !== \"\" &&\r\n        this.state.new_skills_description[i].value\r\n      )\r\n        skill_label.push({\r\n          label: this.state.new_skills_label[i].value,\r\n          description: this.state.new_skills_description[i].value\r\n        });\r\n      else\r\n        skill_label.push({\r\n          label: this.state.new_skills_label[i].value\r\n        });\r\n    SkillsApi.CreateSkillApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      skills: skill_label\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        alert(\"Skills Added Successfully\");\r\n        let x = this.props.main_skill_list;\r\n        res.data.forEach(data => x.push(data));\r\n        this.props.updateSkillList(x);\r\n        this.setState({\r\n          new_skills_label: [],\r\n          new_skills_description: [],\r\n          skills_dropdown: x.map((result, key) => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n        this.changeNumberOfNewSkills({ target: { value: \"\" } });\r\n      } else alert(res.message);\r\n    });\r\n  };\r\n\r\n  editExistingSkills = e => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    let data = {};\r\n    if (e.target.updateskill.value === \"0\") return;\r\n    const competencyId = [];\r\n    this.props.main_competency_list.forEach((res, key) => {\r\n      if (this.state.tags.includes(res.label)) competencyId.push(res.id);\r\n    });\r\n    if (e.target.updateSkillName.value && e.target.updateSkillDescription.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        skillId: e.target.updateskill.value,\r\n        competencyIds: competencyId,\r\n        label: e.target.updateSkillName.value,\r\n        description: e.target.updateSkillDescription.value\r\n      };\r\n    else if (e.target.updateSkillName.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        skillId: e.target.updateskill.value,\r\n        competencyIds: competencyId,\r\n        label: e.target.updateSkillName.value\r\n      };\r\n    else if (e.target.updateSkillDescription.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        skillId: e.target.updateskill.value,\r\n        competencyIds: competencyId,\r\n        description: e.target.updateSkillDescription.value\r\n      };\r\n    else\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        skillId: e.target.updateskill.value,\r\n        competencyIds: competencyId\r\n      };\r\n    SkillsApi.UpdateSkillApi(data).then(res => {\r\n      if (res.code === \"0\") {\r\n        alert(res.message);\r\n        let x = this.props.main_skill_list;\r\n        x.forEach((data, key) => {\r\n          if (data.id === res.data.id) {\r\n            data.label = res.data.label;\r\n            data.competencyIds = res.data.competencyIds;\r\n          }\r\n        });\r\n        this.props.updateSkillList(x);\r\n        this.setState({\r\n          skills_dropdown: x.map(result => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n        e.target.updateSkillName.value = \"\";\r\n      } else alert(res.message);\r\n    });\r\n  };\r\n\r\n  changeNumberOfNewSkills = e => {\r\n    this.setState({ no_of_new_skills: e.target.value });\r\n    const items = [];\r\n    for (let i = 1; i <= e.target.value; i++) {\r\n      items.push(\r\n        <Row key={i}>\r\n          <Col md={6}>\r\n            <FormGroup controlId=\"formHorizontalEmail\">\r\n              <ControlLabel>Enter Names Of Skill to be Created:</ControlLabel>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Enter Skill Name\"\r\n                bsClass=\"form-control question-dropdown\"\r\n                required\r\n                key={i}\r\n                inputRef={element =>\r\n                  element ? this.state.new_skills_label.push(element) : \"\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup controlId=\"formHorizontalEmail\">\r\n              <ControlLabel>Add Description to Your Skill:</ControlLabel>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Enter Skill Description\"\r\n                bsClass=\"form-control question-dropdown\"\r\n                key={i}\r\n                inputRef={element =>\r\n                  element ? this.state.new_skills_description.push(element) : \"\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    this.setState({ new_skills: items });\r\n  };\r\n\r\n  changeActiveStatus = e => {\r\n    if (e.target.value !== \"0\")\r\n      this.setState({\r\n        active_status: this.props.main_skill_list.filter(\r\n          x => x.id === e.target.value\r\n        )[0].active\r\n      });\r\n    else\r\n      this.setState({\r\n        active_status: false\r\n      });\r\n  };\r\n\r\n  changeSkillStatus = e => {\r\n    e.preventDefault();\r\n    SkillsApi.UpdateSkillStatusApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      skillId: e.target.skillstatus.value,\r\n      active: !this.state.active_status\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        let x = this.props.main_skill_list;\r\n        x.forEach((data, key) => {\r\n          if (data.id === res.data.id) data.active = res.data.active;\r\n        });\r\n        this.props.updateSkillList(x);\r\n        this.setState({\r\n          active_status: res.data.active\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  populateTags = e => {\r\n    const tags = [];\r\n    let description = \"\"\r\n    if (e.target.value !== \"0\")\r\n      this.props.main_skill_list.forEach((result, key) => {\r\n        if (result.id === e.target.value) {\r\n          description = result.description;\r\n          result.competencyIds.forEach((data, key) => {\r\n            this.props.main_competency_list.forEach((res, key) => {\r\n              if (data === res.id) tags.push(res.label);\r\n            });\r\n          });\r\n        }\r\n      });\r\n    this.setState({ tempDesc: description, tags: tags });\r\n  };\r\n\r\n  updateTags = e => {\r\n    if (e.target.value !== \"0\") {\r\n      const competencyLabel = this.props.main_competency_list.filter(\r\n        result => result.id === e.target.value\r\n      )[0].label;\r\n      if (!this.state.tags.includes(competencyLabel))\r\n        this.setState({\r\n          tags: [...this.state.tags, competencyLabel]\r\n        });\r\n    }\r\n  };\r\n\r\n  removeTags = e => {\r\n    let index = this.state.tags.indexOf(e);\r\n    this.setState({\r\n      tags: this.state.tags.filter((_, i) => i !== index)\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.main_skill_list && props.main_competency_list) {\r\n      this.setState({\r\n        skills_dropdown: props.main_skill_list.map(result => {\r\n          return (\r\n            <option value={result.id} key={result.id}>\r\n              {result.label}\r\n            </option>\r\n          );\r\n        })\r\n      });\r\n      this.setState({\r\n        competency_dropdown: props.main_competency_list.map(result => {\r\n          return (\r\n            <option value={result.id} key={result.id}>\r\n              {result.label}\r\n            </option>\r\n          );\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h5>Add New Skills</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.addNewSkills}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>\r\n                            Enter Number of Skills to be Created:\r\n                          </ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Number Of Skills\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            required\r\n                            value={this.state.no_of_new_skills}\r\n                            onChange={this.changeNumberOfNewSkills}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    {this.state.new_skills}\r\n                    <Row>\r\n                      <Col md={12} style={{ marginTop: \"-20px\" }}>\r\n                        <SubmitButton buttonName=\"Add New Skills\" />\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"clearfix\" />\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        <h5>Update Existing Skills</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.editExistingSkills}>\r\n                    <Row>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Skill Name:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            onChange={this.populateTags}\r\n                            name=\"updateskill\"\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.skills_dropdown.map((data, key) => {\r\n                              return data;\r\n                            })}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Update Name:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Enter New Name\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updateSkillName\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Update Description:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            value={this.state.tempDesc}\r\n                            placeholder=\"Enter New Description\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updateSkillDescription\"\r\n                            onChange={e => this.setState({tempDesc: e.target.value})}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Add Competency:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"addcompetency\"\r\n                            onChange={this.updateTags}\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.competency_dropdown.map((data, key) => {\r\n                              return data;\r\n                            })}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <TagsInput\r\n                      value={this.state.tags}\r\n                      removeTag={this.removeTags}\r\n                      label=\"Existing Competency for Selected Skills:\"\r\n                    />\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <SubmitButton buttonName=\"Update Skill\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        <h5>Enable/Disable Existing Skills</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.changeSkillStatus}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup\r\n                          validationState={\r\n                            this.state.active_status ? \"success\" : \"error\"\r\n                          }\r\n                        >\r\n                          <ControlLabel>Skill Name:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control\"\r\n                            name=\"skillstatus\"\r\n                            onChange={this.changeActiveStatus}\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.skills_dropdown.map((data, key) => {\r\n                              return data;\r\n                            })}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <SubmitButton buttonName=\"Enable/Disable\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  FormGroup,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card\";\r\nimport SubmitButton from \"components/CustomButton/SubmitButton\";\r\nimport TagsInput from \"../../components/TagInput/TagsInput\";\r\nimport * as CompetencyApi from \"../../api/CompetencyApi\";\r\nimport * as SubCompetencyApi from \"../../api/SubCompetencyApi\";\r\n\r\nexport default class Competency extends Component {\r\n  state = {\r\n    main_subcompetency_list: \"\",\r\n    new_competencies_label: [],\r\n    new_competencies_description: [],\r\n    no_of_new_competency: \"\",\r\n    competency_dropdown: [],\r\n    subcompetency_dropdown: [],\r\n    tags: [],\r\n    active_status: false,\r\n    tempDesc: \"\"\r\n  };\r\n\r\n  addNewCompetency = e => {\r\n    e.preventDefault();\r\n    let competencies_label = [];\r\n    for (let i = 0; i < this.state.new_competencies_label.length; i++)\r\n      if (\r\n        this.state.new_competencies_description[i].value !== \"\" &&\r\n        this.state.new_competencies_description[i].value\r\n      )\r\n        competencies_label.push({\r\n          label: this.state.new_competencies_label[i].value,\r\n          description: this.state.new_competencies_description[i].value\r\n        });\r\n      else\r\n        competencies_label.push({\r\n          label: this.state.new_competencies_label[i].value\r\n        });\r\n    CompetencyApi.CreateCompetencyApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      competencies: competencies_label\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        alert(res.message);\r\n        let x = this.props.main_competency_list;\r\n        res.data.forEach(data => x.push(data));\r\n        this.props.updateCompetencyList(x);\r\n        this.setState({\r\n          new_competencies_label: [],\r\n          new_competencies_description: [],\r\n          competency_dropdown: x.map((result, key) => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n        this.changeNumberOfNewCompetency({ target: { value: \"\" } });\r\n      } else alert(res.message);\r\n    });\r\n  };\r\n\r\n  editExistingCompetency = e => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    if (e.target.updatecompetency.value === \"0\") return;\r\n    let data = {};\r\n    const subCompetencyId = [];\r\n    this.props.main_subcompetency_list.forEach((res, key) => {\r\n      if (this.state.tags.includes(res.label)) subCompetencyId.push(res.id);\r\n    });\r\n    if (\r\n      e.target.updateCompetencyName.value &&\r\n      e.target.updateCompetencyDescription.value\r\n    )\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        competencyId: e.target.updatecompetency.value,\r\n        subCompetencyIds: subCompetencyId,\r\n        label: e.target.updateCompetencyName.value,\r\n        description: e.target.updateCompetencyDescription.value\r\n      };\r\n    else if (e.target.updateCompetencyName.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        competencyId: e.target.updatecompetency.value,\r\n        subCompetencyIds: subCompetencyId,\r\n        label: e.target.updateCompetencyName.value\r\n      };\r\n    else if (e.target.updateCompetencyDescription.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        competencyId: e.target.updatecompetency.value,\r\n        subCompetencyIds: subCompetencyId,\r\n        description: e.target.updateCompetencyDescription.value\r\n      };\r\n    else\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        competencyId: e.target.updatecompetency.value,\r\n        subCompetencyIds: subCompetencyId\r\n      };\r\n    CompetencyApi.UpdateCompetencyApi(data).then(res => {\r\n      if (res.code === \"0\") {\r\n        alert(res.message);\r\n        let x = this.props.main_competency_list;\r\n        x.forEach((data, key) => {\r\n          if (data.id === res.data.id) {\r\n            data.label = res.data.label;\r\n            data.subCompetencyIds = res.data.subCompetencyIds;\r\n          }\r\n        });\r\n        this.props.updateCompetencyList(x);\r\n        this.setState({\r\n          competency_dropdown: x.map((result, key) => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n        e.target.updateCompetencyName.value = \"\";\r\n      } else alert(res.message);\r\n    });\r\n  };\r\n\r\n  changeNumberOfNewCompetency = e => {\r\n    this.setState({ no_of_new_competency: e.target.value });\r\n    const items = [];\r\n    for (let i = 1; i <= e.target.value; i++) {\r\n      items.push(\r\n        <Row key={i}>\r\n          <Col md={6}>\r\n            <FormGroup controlId=\"formHorizontalEmail\">\r\n              <ControlLabel>\r\n                Enter Names Of Competency to be Created:\r\n              </ControlLabel>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Enter Competency Name\"\r\n                bsClass=\"form-control question-dropdown\"\r\n                required\r\n                key={i}\r\n                inputRef={element =>\r\n                  element ? this.state.new_competencies_label.push(element) : \"\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup controlId=\"formHorizontalEmail\">\r\n              <ControlLabel>Add Description to Your Competency:</ControlLabel>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Enter Competency Description\"\r\n                bsClass=\"form-control question-dropdown\"\r\n                key={i}\r\n                inputRef={element =>\r\n                  element\r\n                    ? this.state.new_competencies_description.push(element)\r\n                    : \"\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    this.setState({ new_competency: items });\r\n  };\r\n\r\n  changeActiveStatus = e => {\r\n    if (e.target.value !== \"0\")\r\n      this.setState({\r\n        active_status: this.props.main_competency_list.filter(\r\n          x => x.id === e.target.value\r\n        )[0].active\r\n      });\r\n    else\r\n      this.setState({\r\n        active_status: false\r\n      });\r\n  };\r\n\r\n  changeCompetencyStatus = e => {\r\n    e.preventDefault();\r\n    CompetencyApi.UpdateCompetencyStatusApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      competencyId: e.target.competencystatus.value,\r\n      active: !this.state.active_status\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        let x = this.props.main_competency_list;\r\n        x.forEach(data => {\r\n          if (data.id === res.data.id) data.active = res.data.active;\r\n        });\r\n        this.props.updateCompetencyList(x);\r\n        this.setState({\r\n          active_status: res.data.active\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  populateTags = e => {\r\n    const tags = [];\r\n    let description = \"\";\r\n    if (e.target.value !== \"0\")\r\n      this.props.main_competency_list.forEach(result => {\r\n        if (result.id === e.target.value) {\r\n          description = result.description;\r\n          result.subCompetencyIds.forEach(data => {\r\n            this.props.main_subcompetency_list.forEach(res => {\r\n              if (data === res.id) tags.push(res.label);\r\n            });\r\n          });\r\n        }\r\n      });\r\n    this.setState({ tempDesc: description, tags: tags });\r\n  };\r\n\r\n  updateTags = e => {\r\n    if (e.target.value !== \"0\") {\r\n      const competencyLabel = this.props.main_subcompetency_list.filter(\r\n        result => result.id === e.target.value\r\n      )[0].label;\r\n      if (!this.state.tags.includes(competencyLabel))\r\n        this.setState({\r\n          tags: [...this.state.tags, competencyLabel]\r\n        });\r\n    }\r\n  };\r\n\r\n  removeTags = e => {\r\n    let index = this.state.tags.indexOf(e);\r\n    this.setState({\r\n      tags: this.state.tags.filter((_, i) => i !== index)\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.main_competency_list && props.main_subcompetency_list) {\r\n      CompetencyApi.GetCompetenciesApi().then(res => {\r\n        this.setState({\r\n          competency_dropdown: props.main_competency_list.map(result => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n      });\r\n      SubCompetencyApi.GetSubCompetenciesApi().then(res => {\r\n        this.setState({\r\n          subcompetency_dropdown: props.main_subcompetency_list.map(result => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h5>Add New Competency</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.addNewCompetency}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>\r\n                            Enter Number of Competency to be Created:\r\n                          </ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Number Of Competency\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            required\r\n                            value={this.state.no_of_new_competency}\r\n                            onChange={this.changeNumberOfNewCompetency}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    {this.state.new_competency}\r\n                    <Row>\r\n                      <Col md={12} style={{ marginTop: \"-20px\" }}>\r\n                        <SubmitButton buttonName=\"Add New Competencies\" />\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"clearfix\" />\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        <h5>Update Existing Competency</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.editExistingCompetency}>\r\n                    <Row>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Competency Name:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            onChange={this.populateTags}\r\n                            name=\"updatecompetency\"\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.competency_dropdown.map((data, key) => {\r\n                              return data;\r\n                            })}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Update Name:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Enter New Name\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updateCompetencyName\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Update Description:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            value={this.state.tempDesc}\r\n                            placeholder=\"Enter New Desciption\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updateCompetencyDescription\"\r\n                            onChange={e => this.setState({tempDesc: e.target.value})}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Add Sub-Competency:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"addcompetency\"\r\n                            onChange={this.updateTags}\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.subcompetency_dropdown.map(data => {\r\n                              return data;\r\n                            })}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <TagsInput\r\n                      value={this.state.tags}\r\n                      removeTag={this.removeTags}\r\n                      label=\"Existing Competency:\"\r\n                    />\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <SubmitButton buttonName=\"Update Skill\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        <h5>Enable/Disable Existing Competency</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.changeCompetencyStatus}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup\r\n                          validationState={\r\n                            this.state.active_status ? \"success\" : \"error\"\r\n                          }\r\n                        >\r\n                          <ControlLabel>Competency Name:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control\"\r\n                            name=\"competencystatus\"\r\n                            onChange={this.changeActiveStatus}\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.competency_dropdown.map((data, key) => {\r\n                              return data;\r\n                            })}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <SubmitButton buttonName=\"Enable/Disable\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  FormGroup,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card\";\r\nimport SubmitButton from \"components/CustomButton/SubmitButton\";\r\nimport * as SubCompetencyApi from \"../../api/SubCompetencyApi\";\r\n\r\nexport default class SubCompetency extends Component {\r\n  state = {\r\n    new_subcompetencies_label: [],\r\n    new_subcompetencies_description: [],\r\n    no_of_new_subcompetency: \"\",\r\n    subcompetency_dropdown: [],\r\n    active_status: false,\r\n    tempDesc: \"\"\r\n  };\r\n\r\n  addNewSubCompetency = e => {\r\n    e.preventDefault();\r\n    let subCompetencies_label = [];\r\n    for (let i = 0; i < this.state.new_subcompetencies_label.length; i++)\r\n      if (\r\n        this.state.new_subcompetencies_description[i].value !== \"\" &&\r\n        this.state.new_subcompetencies_description[i].value\r\n      )\r\n        subCompetencies_label.push({\r\n          label: this.state.new_subcompetencies_label[i].value,\r\n          description: this.state.new_subcompetencies_description[i].value\r\n        });\r\n      else\r\n        subCompetencies_label.push({\r\n          label: this.state.new_subcompetencies_label[i].value\r\n        });\r\n    SubCompetencyApi.CreateSubCompetencyApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      subCompetencies: subCompetencies_label\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        alert(res.message);\r\n        let x = this.props.main_subcompetency_list;\r\n        res.data.forEach(data => x.push(data));\r\n        this.props.updateSubCompetencyList(x);\r\n        this.setState({\r\n          new_subcompetencies_label: [],\r\n          new_subcompetencies_description: [],\r\n          subcompetency_dropdown: x.map((result, key) => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n        this.changeNumberOfNewSubCompetency({ target: { value: \"\" } });\r\n      } else alert(res.message);\r\n    });\r\n  };\r\n\r\n  editExistingSubCompetency = e => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    if (e.target.updatesubcompetency.value === \"0\") return;\r\n    let data = {};\r\n    if (\r\n      e.target.updateSubCompetencyName.value &&\r\n      e.target.updateSubCompetencyDescription.value\r\n    )\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        subCompetencyId: e.target.updatesubcompetency.value,\r\n        label: e.target.updateSubCompetencyName.value,\r\n        description: e.target.updateSubCompetencyDescription.value\r\n      };\r\n    else if (e.target.updateSubCompetencyName.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        subCompetencyId: e.target.updatesubcompetency.value,\r\n        label: e.target.updateSubCompetencyName.value\r\n      };\r\n    else if (e.target.updateSubCompetencyDescription.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        subCompetencyId: e.target.updatesubcompetency.value,\r\n        description: e.target.updateSubCompetencyDescription.value\r\n      };\r\n    SubCompetencyApi.UpdateSubCompetencyApi(data).then(res => {\r\n      if (res.code === \"0\") {\r\n        alert(res.message);\r\n        let x = this.props.main_subcompetency_list;\r\n        x.forEach(data => {\r\n          if (data.id === res.data.id) data.label = res.data.label;\r\n        });\r\n        this.props.updateSubCompetencyList(x);\r\n        this.setState({\r\n          subcompetency_dropdown: x.map((result, key) => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n        e.target.updateSubCompetencyName.value = \"\";\r\n      } else alert(res.message);\r\n    });\r\n  };\r\n\r\n  changeNumberOfNewSubCompetency = e => {\r\n    this.setState({ no_of_new_subcompetency: e.target.value });\r\n    const items = [];\r\n    for (let i = 1; i <= e.target.value; i++) {\r\n      items.push(\r\n        <Row key={i}>\r\n          <Col md={6}>\r\n            <FormGroup controlId=\"formHorizontalEmail\">\r\n              <ControlLabel>\r\n                Enter Names Of Sub-Competency to be Created:\r\n              </ControlLabel>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Enter Sub-Competency Name\"\r\n                bsClass=\"form-control question-dropdown\"\r\n                required\r\n                key={i}\r\n                inputRef={element =>\r\n                  element\r\n                    ? this.state.new_subcompetencies_label.push(element)\r\n                    : \"\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup controlId=\"formHorizontalEmail\">\r\n              <ControlLabel>Add Description:</ControlLabel>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Enter Sub-Competency Description\"\r\n                bsClass=\"form-control question-dropdown\"\r\n                key={i}\r\n                inputRef={element =>\r\n                  element\r\n                    ? this.state.new_subcompetencies_description.push(element)\r\n                    : \"\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    this.setState({ new_subcompetency: items });\r\n  };\r\n\r\n  changeActiveStatus = e => {\r\n    if (e.target.value !== \"0\")\r\n      this.setState({\r\n        active_status: this.props.main_subcompetency_list.filter(\r\n          x => x.id === e.target.value\r\n        )[0].active\r\n      });\r\n    else\r\n      this.setState({\r\n        active_status: false\r\n      });\r\n  };\r\n\r\n  changeSubCompetencyStatus = e => {\r\n    e.preventDefault();\r\n    SubCompetencyApi.UpdateSubCompetencyStatusApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      subCompetencyId: e.target.subcompetencystatus.value,\r\n      active: !this.state.active_status\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        let x = this.props.main_subcompetency_list;\r\n        x.forEach(data => {\r\n          if (data.id === res.data.id) data.active = res.data.active;\r\n        });\r\n        this.props.updateSubCompetencyList(x);\r\n        this.setState({\r\n          active_status: res.data.active\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.main_subcompetency_list)\r\n      this.setState({\r\n        subcompetency_dropdown: props.main_subcompetency_list.map(result => {\r\n          return (\r\n            <option value={result.id} key={result.id}>\r\n              {result.label}\r\n            </option>\r\n          );\r\n        })\r\n      });\r\n  }\r\n\r\n  populateTags = e => {\r\n    let description = \"\";\r\n    if (e.target.value !== \"0\")\r\n      this.props.main_subcompetency_list.forEach(result => {\r\n        if (result.id === e.target.value) description = result.description;\r\n      });\r\n    this.setState({ tempDesc: description });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h5>Add New Sub-Competency</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.addNewSubCompetency}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>\r\n                            Enter Number of Sub-Competency to be Created:\r\n                          </ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Number Of Sub-Competency\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            required\r\n                            value={this.state.no_of_new_subcompetency}\r\n                            onChange={this.changeNumberOfNewSubCompetency}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    {this.state.new_subcompetency}\r\n                    <Row>\r\n                      <Col md={12} style={{ marginTop: \"-20px\" }}>\r\n                        <SubmitButton buttonName=\"Add New Sub-Competencies\" />\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"clearfix\" />\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        <h5>Update Existing Sub-Competency</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.editExistingSubCompetency}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Sub-Competency Name:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            onChange={this.populateTags}\r\n                            name=\"updatesubcompetency\"\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.subcompetency_dropdown.map(\r\n                              (data, key) => {\r\n                                return data;\r\n                              }\r\n                            )}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Update Name:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Enter New Name\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updateSubCompetencyName\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Update Description:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            value={this.state.tempDesc}\r\n                            placeholder=\"Enter New Desciption\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updateSubCompetencyDescription\"\r\n                            onChange={e =>\r\n                              this.setState({ tempDesc: e.target.value })\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={12} style={{ marginTop: \"-20px\" }}>\r\n                        <SubmitButton buttonName=\"Update Skill\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        <h5>Enable/Disable Existing Sub-Competency</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.changeSubCompetencyStatus}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup\r\n                          validationState={\r\n                            this.state.active_status ? \"success\" : \"error\"\r\n                          }\r\n                        >\r\n                          <ControlLabel>Sub-Competency Name:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control\"\r\n                            name=\"subcompetencystatus\"\r\n                            onChange={this.changeActiveStatus}\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.subcompetency_dropdown.map(\r\n                              (data, key) => {\r\n                                return data;\r\n                              }\r\n                            )}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <SubmitButton buttonName=\"Enable/Disable\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  FormGroup,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card\";\r\nimport SubmitButton from \"components/CustomButton/SubmitButton\";\r\nimport * as LevelApi from \"../../api/LevelApi\";\r\n\r\nexport default class Level extends Component {\r\n  state = {\r\n    level_dropdown: [],\r\n    active_status: false,\r\n    tempDesc: \"\"\r\n  };\r\n\r\n  addNewLevel = e => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    let data = {};\r\n    if (e.target.leveldesc.value === \"\")\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        label: e.target.levelname.value,\r\n        levelNo: e.target.levelno.value,\r\n        time: e.target.leveltime.value\r\n      };\r\n    else\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        label: e.target.levelname.value,\r\n        levelNo: e.target.levelno.value,\r\n        description: e.target.leveldesc.value,\r\n        time: e.target.leveltime.value\r\n      };\r\n    LevelApi.CreateLevelApi(data).then(res => {\r\n      if (res.code === \"0\") {\r\n        alert(res.message);\r\n        let x = this.props.main_level_list;\r\n        if (x) {\r\n          x.push(res.data);\r\n          this.props.updateLevelList(x);\r\n          this.setState({\r\n            level_dropdown: x.map(result => {\r\n              return (\r\n                <option value={result.id} key={result.id}>\r\n                  {result.label}\r\n                </option>\r\n              );\r\n            })\r\n          });\r\n        }\r\n        e.target.levelname.value = \"\";\r\n        e.target.leveldesc.value = \"\";\r\n        e.target.levelno.value = \"\";\r\n        e.target.leveltime.value = \"\";\r\n      } else alert(res.message);\r\n    });\r\n  };\r\n\r\n  editExistingLevel = e => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    if (e.target.updatelevel.value === \"0\") return;\r\n    let data = {};\r\n    if (e.target.updateLevelName.value && e.target.updateLevelDescription.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        levelId: e.target.updatelevel.value,\r\n        label: e.target.updateLevelName.value,\r\n        description: e.target.updateLevelDescription.value\r\n      };\r\n    else if (e.target.updateLevelName.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        levelId: e.target.updatelevel.value,\r\n        label: e.target.updateLevelName.value\r\n      };\r\n    else if (e.target.updateLevelDescription.value)\r\n      data = {\r\n        token: localStorage.getItem(\"token\"),\r\n        levelId: e.target.updatelevel.value,\r\n        description: e.target.updateLevelDescription.value\r\n      };\r\n    LevelApi.UpdateLevelApi(data).then(res => {\r\n      if (res.code === \"0\") {\r\n        alert(res.message);\r\n        let x = this.props.main_level_list;\r\n        x.forEach(data => {\r\n          if (data.id === res.data.id) data.label = res.data.label;\r\n        });\r\n        this.props.updateLevelList(x);\r\n        this.setState({\r\n          level_dropdown: x.map(result => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n        e.target.updatelevel.value = \"\";\r\n      } else alert(res.message);\r\n    });\r\n  };\r\n\r\n  changeActiveStatus = e => {\r\n    if (e.target.value !== \"0\")\r\n      this.setState({\r\n        active_status: this.props.main_level_list.filter(\r\n          x => x.id === e.target.value\r\n        )[0].active\r\n      });\r\n    else\r\n      this.setState({\r\n        active_status: false\r\n      });\r\n  };\r\n\r\n  changeLevelStatus = e => {\r\n    e.preventDefault();\r\n    LevelApi.UpdateLevelStatusApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      levelId: e.target.subcompetencystatus.value,\r\n      active: !this.state.active_status\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        let x = this.props.main_level_list;\r\n        x.forEach(data => {\r\n          if (data.id === res.data.id) data.active = res.data.active;\r\n        });\r\n        this.props.updateLevelList(x);\r\n        this.setState({\r\n          active_status: res.data.active\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.main_level_list)\r\n      this.setState({\r\n        level_dropdown: props.main_level_list.map(result => {\r\n          return (\r\n            <option value={result.id} key={result.id}>\r\n              {result.label}\r\n            </option>\r\n          );\r\n        })\r\n      });\r\n  }\r\n\r\n  populateTags = e => {\r\n    let description = \"\";\r\n    if (e.target.value !== \"0\")\r\n      this.props.main_level_list.forEach(result => {\r\n        if (result.id === e.target.value) description = result.description;\r\n      });\r\n    this.setState({ tempDesc: description });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h5>Add New Level</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.addNewLevel}>\r\n                    <Row>\r\n                      <Col md={3}>\r\n                        <FormGroup controlId=\"formHorizontalEmail\">\r\n                          <ControlLabel>Add Name:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Level Name\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            required\r\n                            name=\"levelname\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup controlId=\"formHorizontalEmail\">\r\n                          <ControlLabel>Add Description:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Level Description\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"leveldesc\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup controlId=\"formHorizontalEmail\">\r\n                          <ControlLabel>Add Level Number:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Level Number\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            required\r\n                            name=\"levelno\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup controlId=\"formHorizontalEmail\">\r\n                          <ControlLabel>Add Time:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Level Time\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            required\r\n                            name=\"leveltime\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={12} style={{ marginTop: \"-20px\" }}>\r\n                        <SubmitButton buttonName=\"Add New Level\" />\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"clearfix\" />\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        <h5>Update Existing Level</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.editExistingLevel}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Level Name:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updatelevel\"\r\n                            onChange={this.populateTags}\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.level_dropdown.map((data, key) => {\r\n                              return data;\r\n                            })}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Update Name:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Enter New Name\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updateLevelName\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <ControlLabel>Update Description:</ControlLabel>\r\n                          <FormControl\r\n                            type=\"text\"\r\n                            value={this.state.tempDesc}\r\n                            placeholder=\"Enter New Desciption\"\r\n                            bsClass=\"form-control question-dropdown\"\r\n                            name=\"updateLevelDescription\"\r\n                            onChange={e =>\r\n                              this.setState({ tempDesc: e.target.value })\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={12} style={{ marginTop: \"-20px\" }}>\r\n                        <SubmitButton buttonName=\"Update Level\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        <h5>Enable/Disable Existing Level</h5>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Card\r\n                skills=\"true\"\r\n                content={\r\n                  <form onSubmit={this.changeLevelStatus}>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormGroup\r\n                          validationState={\r\n                            this.state.active_status ? \"success\" : \"error\"\r\n                          }\r\n                        >\r\n                          <ControlLabel>Level Name:</ControlLabel>\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            bsClass=\"form-control\"\r\n                            name=\"subcompetencystatus\"\r\n                            onChange={this.changeActiveStatus}\r\n                          >\r\n                            <option value=\"0\">Select Type</option>\r\n                            {this.state.level_dropdown.map((data, key) => {\r\n                              return data;\r\n                            })}\r\n                          </FormControl>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <SubmitButton buttonName=\"Enable/Disable\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                }\r\n              />\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Row } from \"react-bootstrap\";\r\nimport Skills from \"./Skills\";\r\nimport Competency from \"./Competency\";\r\nimport SubCompetency from \"./Sub-Competency\";\r\nimport Level from \"./Level\";\r\nimport * as SkillsApi from \"../../api/SkillApi\";\r\nimport * as CompetencyApi from \"../../api/CompetencyApi\";\r\nimport * as SubCompetencyApi from \"../../api/SubCompetencyApi\";\r\nimport * as LevelApi from \"../../api/LevelApi\";\r\n\r\nexport default class Manage extends Component {\r\n  state = {\r\n    main_skill_list: \"\",\r\n    main_competency_list: \"\",\r\n    main_subcompetency_list: \"\"\r\n  };\r\n\r\n  updateSkillList = e => {\r\n    this.setState(() => {\r\n      return {\r\n        main_skill_list: e\r\n      };\r\n    });\r\n  };\r\n\r\n  updateCompetencyList = e => {\r\n    this.setState(() => {\r\n      return {\r\n        main_competency_list: e\r\n      };\r\n    });\r\n  };\r\n\r\n  updateSubCompetencyList = e => {\r\n    this.setState(() => {\r\n      return {\r\n        main_subcompetency_list: e\r\n      };\r\n    });\r\n  };\r\n\r\n  updateLevelList = e => {\r\n    this.setState(() => {\r\n      return {\r\n        main_level_list: e\r\n      };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    SkillsApi.GetSkillsApi().then(res => {\r\n      this.setState(() => {\r\n        return {\r\n          main_skill_list: res.data\r\n        };\r\n      });\r\n    });\r\n\r\n    CompetencyApi.GetCompetenciesApi().then(res => {\r\n      this.setState(() => {\r\n        return {\r\n          main_competency_list: res.data\r\n        };\r\n      });\r\n    });\r\n\r\n    SubCompetencyApi.GetSubCompetenciesApi().then(res => {\r\n      this.setState(() => {\r\n        return {\r\n          main_subcompetency_list: res.data\r\n        };\r\n      });\r\n    });\r\n\r\n    LevelApi.GetLevelApi().then(res => {\r\n      this.setState(() => {\r\n        return {\r\n          main_level_list: res.data\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <div className=\"nav-switch-tab_container\">\r\n              <input\r\n                id=\"nav-switch-tab1\"\r\n                type=\"radio\"\r\n                name=\"tabs\"\r\n                defaultChecked\r\n                className=\"nav-switch\"\r\n              />\r\n              <label htmlFor=\"nav-switch-tab1\" className=\"nav-switch\">\r\n                <span className=\"nav-switch\">\r\n                  <i className=\"fa fa-cubes\" /> Skills\r\n                </span>\r\n              </label>\r\n              <input\r\n                id=\"nav-switch-tab2\"\r\n                type=\"radio\"\r\n                name=\"tabs\"\r\n                className=\"nav-switch\"\r\n              />\r\n              <label htmlFor=\"nav-switch-tab2\" className=\"nav-switch\">\r\n                <span className=\"nav-switch\">\r\n                  <i className=\"fa fa-signal\" /> Competency\r\n                </span>\r\n              </label>\r\n              <input\r\n                id=\"nav-switch-tab3\"\r\n                type=\"radio\"\r\n                name=\"tabs\"\r\n                className=\"nav-switch\"\r\n              />\r\n              <label htmlFor=\"nav-switch-tab3\" className=\"nav-switch\">\r\n                <span className=\"nav-switch\">\r\n                  <i className=\"fa fa-check\" /> SubCompetency\r\n                </span>\r\n              </label>\r\n              <input\r\n                id=\"nav-switch-tab4\"\r\n                type=\"radio\"\r\n                name=\"tabs\"\r\n                className=\"nav-switch\"\r\n              />\r\n              <label htmlFor=\"nav-switch-tab4\" className=\"nav-switch\">\r\n                <span className=\"nav-switch\">\r\n                  <i className=\"fa fa-navicon\" /> Level\r\n                </span>\r\n              </label>\r\n              <section\r\n                id=\"nav-switch-content1\"\r\n                className=\"nav-switch-tab-content nav-switch\"\r\n              >\r\n                <Skills\r\n                  main_skill_list={this.state.main_skill_list}\r\n                  main_competency_list={this.state.main_competency_list}\r\n                  updateSkillList={this.updateSkillList}\r\n                />\r\n              </section>\r\n              <section\r\n                id=\"nav-switch-content2\"\r\n                className=\"nav-switch-tab-content nav-switch\"\r\n              >\r\n                <Competency\r\n                  main_competency_list={this.state.main_competency_list}\r\n                  main_subcompetency_list={this.state.main_subcompetency_list}\r\n                  updateCompetencyList={this.updateCompetencyList}\r\n                />\r\n              </section>\r\n              <section\r\n                id=\"nav-switch-content3\"\r\n                className=\"nav-switch-tab-content nav-switch\"\r\n              >\r\n                <SubCompetency\r\n                  main_subcompetency_list={this.state.main_subcompetency_list}\r\n                  updateSubCompetencyList={this.updateSubCompetencyList}\r\n                />\r\n              </section>\r\n              <section\r\n                id=\"nav-switch-content4\"\r\n                className=\"nav-switch-tab-content nav-switch\"\r\n              >\r\n                <Level\r\n                  main_level_list={this.state.main_level_list}\r\n                  updateLevelList={this.updateLevelList}\r\n                />\r\n              </section>\r\n            </div>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Grid } from \"react-bootstrap\";\r\nimport Manage from \"./Manage\";\r\nimport UnAuthorized from \"../UnAuthorized/UnAuthorized\";\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              {JSON.parse(localStorage.getItem(\"user_role\")).includes(\r\n                \"UassessAdmin\"\r\n              ) ? (\r\n                <Manage />\r\n              ) : (\r\n                <UnAuthorized />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nconst header = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n};\r\n\r\nconst getbody = {\r\n  token: localStorage.getItem(\"token\"),\r\n  active: true\r\n};\r\n\r\nexport const Login = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3000_v1 + \"/login\",\r\n      data ? data : getbody,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/AuthenticationApi in Login() for Login\",\r\n        error\r\n      )\r\n    );\r\n};\r\n\r\nexport const Register = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3000_v1 + \"/register\",\r\n      data ? data : getbody,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/AuthenticationApi in Register() for Registration\",\r\n        error\r\n      )\r\n    );\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  ControlLabel,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Card } from \"../../components/Card/Card\";\r\nimport Button from \"components/CustomButton/CustomButton\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport * as AuthenticationApi from \"api/AuthenticationApi\";\r\n\r\nexport default class AddNewUser extends Component {\r\n  state = {\r\n    alert: null\r\n  };\r\n\r\n  registerUser = e => {\r\n    e.preventDefault();\r\n    if (e.target.password.value !== e.target.cpassword.value) {\r\n      this.setState({\r\n        alert: (\r\n          <SweetAlert\r\n            danger\r\n            title=\"Password Does Not Match!\"\r\n            onConfirm={() => {\r\n              this.setState({ alert: null });\r\n            }}\r\n          />\r\n        )\r\n      });\r\n      return;\r\n    } else if (e.target.userrole.value === \"0\") {\r\n      this.setState({\r\n        alert: (\r\n          <SweetAlert\r\n            danger\r\n            title=\"Please Select A Role!\"\r\n            onConfirm={() => {\r\n              this.setState({ alert: null });\r\n            }}\r\n          />\r\n        )\r\n      });\r\n      return;\r\n    }\r\n    AuthenticationApi.Register({\r\n      email: e.target.username.value,\r\n      password: e.target.password.value,\r\n      name: e.target.name.value,\r\n      privilegeRole: e.target.userrole.value,\r\n      pushNotificationId: e.target.pushNotificationId.value,\r\n      clientId: e.target.clientId.value,\r\n      companyId: e.target.companyId.value,\r\n      jobRole: e.target.jobRole.value\r\n    }).then(res => {\r\n      if (res.code === \"0\")\r\n        this.setState({\r\n          alert: (\r\n            <SweetAlert\r\n              success\r\n              title={res.message}\r\n              onConfirm={() => {\r\n                this.setState({ alert: null });\r\n              }}\r\n            />\r\n          )\r\n        });\r\n      else\r\n        this.setState({\r\n          alert: (\r\n            <SweetAlert\r\n              danger\r\n              title={res.message}\r\n              onConfirm={() => {\r\n                this.setState({ alert: null });\r\n              }}\r\n            />\r\n          )\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title=\"Register New User For Assessment\"\r\n        header=\"true\"\r\n        content={\r\n          <Fragment>\r\n            <form onSubmit={this.registerUser}>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup controlId=\"formHorizontalName\">\r\n                    <ControlLabel>Name</ControlLabel>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Push Notification ID</ControlLabel>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"pushNotificationId\"\r\n                      placeholder=\"Enter Push Notification ID\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup controlId=\"formHorizontalEmail\">\r\n                    <ControlLabel>Email</ControlLabel>\r\n                    <FormControl\r\n                      type=\"email\"\r\n                      name=\"username\"\r\n                      placeholder=\"Enter Email Id\"\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Client ID</ControlLabel>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"clientId\"\r\n                      placeholder=\"Enter Client ID\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <ControlLabel>Password</ControlLabel>\r\n                    <FormControl\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Company ID</ControlLabel>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"companyId\"\r\n                      placeholder=\"Enter Company ID\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup controlId=\"formHorizontalConfirmPassword\">\r\n                    <ControlLabel>Confirm Password</ControlLabel>\r\n                    <FormControl\r\n                      type=\"password\"\r\n                      name=\"cpassword\"\r\n                      placeholder=\"ConfirmPassword\"\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Job Role</ControlLabel>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"jobRole\"\r\n                      placeholder=\"Enter Job Role\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Select User Role</ControlLabel>\r\n                    <FormControl\r\n                      componentClass=\"select\"\r\n                      bsClass=\"form-control question-dropdown\"\r\n                      name=\"userrole\"\r\n                    >\r\n                      <option value=\"0\">Select Type</option>\r\n                      <option value=\"Assessee\">Assessee</option>\r\n                      <option value=\"Author\">Author</option>\r\n                      <option value=\"Evaluator\">Evaluator</option>\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"text-center\" style={{ paddingBottom: \"20px\" }}>\r\n                <Button bsStyle=\"info\" fill type=\"submit\">\r\n                  Add New User\r\n                </Button>\r\n              </Row>\r\n            </form>\r\n            {this.state.alert}\r\n          </Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AddNewUser from \"./AddNewUser\";\r\nimport { Row, Col, Grid } from \"react-bootstrap\";\r\nimport UnAuthorized from \"../UnAuthorized/UnAuthorized\";\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              {JSON.parse(localStorage.getItem(\"user_role\")).includes(\r\n                \"UassessAdmin\"\r\n              ) ? (\r\n                <AddNewUser />\r\n              ) : (\r\n                <UnAuthorized />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  FormGroup,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport * as SkillsApi from \"api/SkillApi\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\nimport TagsInput from \"../../components/TagInput/TagsInput\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nexport default class Settings extends Component {\r\n  state = {\r\n    skill_list: [],\r\n    skills_dropdown: [],\r\n    tags: [],\r\n    alert: null\r\n  };\r\n\r\n  updateTags = e => {\r\n    if (e.target.value !== \"0\") {\r\n      const x = this.state.skill_list.filter(\r\n        data => data.id === e.target.value\r\n      )[0].label;\r\n      if (!this.state.tags.includes(x))\r\n        this.setState({\r\n          tags: [...this.state.tags, x]\r\n        });\r\n    }\r\n  };\r\n\r\n  removeTags = e => {\r\n    let index = this.state.tags.indexOf(e);\r\n    this.setState({\r\n      tags: this.state.tags.filter((_, i) => i !== index)\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    let x = [];\r\n    x = this.state.skill_list.filter(data =>\r\n      this.state.tags.includes(data.label)\r\n    );\r\n    localStorage.setItem(\"SelectedSkills\", JSON.stringify(x));\r\n    this.setState({\r\n      alert: (\r\n        <SweetAlert\r\n          success\r\n          title=\"Updated Successfully\"\r\n          onConfirm={() => {\r\n            this.setState({ alert: null });\r\n          }}\r\n        />\r\n      )\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    SkillsApi.GetSkillsApi({\r\n      token: localStorage.getItem(\"token\"),\r\n      active: true\r\n    }).then(res => {\r\n      if (res.code === \"0\")\r\n        this.setState({\r\n          skill_list: res.data,\r\n          skills_dropdown: res.data.map(result => {\r\n            return (\r\n              <option value={result.id} key={result.id}>\r\n                {result.label}\r\n              </option>\r\n            );\r\n          })\r\n        });\r\n    });\r\n    let x = JSON.parse(localStorage.getItem(\"SelectedSkills\"));\r\n    let a = [];\r\n    if (x) x.forEach(data => a.push(data.label));\r\n    this.setState(prevState => {\r\n      return { tags: [...a] };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <ControlLabel>List Of Skills:</ControlLabel>\r\n                  <FormControl\r\n                    componentClass=\"select\"\r\n                    bsClass=\"form-control question-dropdown\"\r\n                    name=\"skillselected\"\r\n                    onChange={this.updateTags}\r\n                  >\r\n                    <option value=\"0\">Select Type</option>\r\n                    {this.state.skills_dropdown.map(data => {\r\n                      return data;\r\n                    })}\r\n                  </FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <TagsInput\r\n              value={this.state.tags}\r\n              removeTag={this.removeTags}\r\n              label=\"Existing Competency for Selected Skills:\"\r\n            />\r\n            <Button\r\n              fill\r\n              onClick={this.handleClose}\r\n              style={{ marginTop: \"20px\" }}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </div>\r\n        {this.state.alert}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import Dashboard from \"../views/Dashboard/Index\";\nimport CreateQuestions from \"../views/CreateQuestions/Index\";\nimport Manage from \"../views/Manage/Index\";\nimport AddNewUser from \"../views/AddNewUser/Index\";\nimport Settings from \"../views/Settings/Index\";\nimport SignOut from \"../views/Authentication/SignOut\";\n\nconst MainRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"fa fa-dashboard\",\n    page: \"Dashboard\",\n    component: Dashboard\n  },\n  {\n    path: \"/createquestions\",\n    name: \"Create Questions\",\n    icon: \"fa fa-edit\",\n    page: \"Create Questions\",\n    component: CreateQuestions\n  },\n  {\n    path: \"/manage\",\n    name: \"Manage\",\n    icon: \"fa fa-gears\",\n    page: \"Manage\",\n    component: Manage\n  },\n  {\n    path: \"/addnewuser\",\n    name: \"Add New User\",\n    icon: \"fa fa-user-plus\",\n    page: \"Add New User\",\n    component: AddNewUser\n  },\n  {\n    path: \"/settings\",\n    name: \"Modify Settings\",\n    icon: \"fa fa-gear\",\n    page: \"Modify Settings\",\n    component: Settings\n  },\n  {\n    path: \"/signout\",\n    name: \"Sign Out\",\n    page: \"\",\n    icon: \"fa fa-power-off\",\n    component: SignOut\n  },\n  { redirect: true, path: \"/\", to: \"/dashboard\", name: \"Dashboard\" }\n];\n\nexport default MainRoutes;\n","import React, { Component } from \"react\";\r\nimport Settings from \"./Settings\";\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return <Settings />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class SignOut extends Component {\r\n  componentDidMount() {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/abc\");\r\n  }\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport MainRoutes from \"routes/MainRoutes.jsx\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  getBrand() {\n    var name;\n    MainRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  render() {\n    return (\n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#pablo\">{this.getBrand()}</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Grid } from \"react-bootstrap\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Grid fluid>\n          <p className=\"copyright pull-left\">\n            <strong>UAssess &copy; {new Date().getFullYear()},</strong>All\n            rights reserved.\n          </p>\n        </Grid>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport imagine from \"assets/img/sidebar.jpg\";\nimport logo from \"assets/img/logo.png\";\nimport MainRoutes from \"routes/MainRoutes.jsx\";\n\nexport default class Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth\n    };\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n  render() {\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + imagine + \")\"\n    };\n    return (\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color=\"black\"\n        data-image={imagine}\n      >\n        <div className=\"sidebar-background\" style={sidebarBackground} />\n        <div className=\"logo\">\n          <a\n            href=\"/\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"logo_image\" />\n            </div>\n          </a>\n          <a\n            href=\"/\"\n            className=\"simple-text logo-normal\"\n          >\n            UAssess\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\">\n          <ul className=\"nav\">\n            {MainRoutes.map((prop, key) => {\n              if (!prop.redirect)\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.path)\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <i className={prop.icon} />\n                      <p>{prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              return null;\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\r\nconst header = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n};\r\n\r\nconst getbody = {\r\n  token: localStorage.getItem(\"token\"),\r\n  active: true\r\n};\r\n\r\nexport const getMyProfileApi = data => {\r\n  return axios\r\n    .post(\r\n      process.env.REACT_APP_PATH_URL_3000_v1 + \"/get-my-profile\",\r\n      data ? data : getbody,\r\n      header\r\n    )\r\n    .then(res => res.data)\r\n    .catch(error =>\r\n      console.log(\r\n        \"parsing failed at src/api/getMyProfileApi/ in GetMyProfile() for Fetching User ID\",\r\n        error\r\n      )\r\n    );\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\r\nimport { Card } from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport * as AuthenticationApi from \"../../api/AuthenticationApi\";\r\nimport * as UserApi from \"../../api/UserApi\";\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    alert: null\r\n  };\r\n\r\n  checkUser = e => {\r\n    e.preventDefault();\r\n    AuthenticationApi.Login({\r\n      clientId: \"2431\",\r\n      authType: \"Default\",\r\n      userId: e.target.username.value,\r\n      password: e.target.password.value,\r\n      appVersion: \"0.2\"\r\n    }).then(res => {\r\n      if (res.code === \"0\") {\r\n        let x = res.data.privilegeRoles;\r\n        if (\r\n          x.includes(\"UassessAdmin\") ||\r\n          x.includes(\"Author\") ||\r\n          x.includes(\"Evaluator\")\r\n        ) {\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          localStorage.setItem(\r\n            \"user_role\",\r\n            JSON.stringify(res.data.privilegeRoles)\r\n          );\r\n          localStorage.setItem(\"user_status\", \"User_Logged_In\");\r\n          if(x.includes(\"UassessAdmin\")){\r\n            localStorage.setItem(\"SelectSkill\", false);\r\n            localStorage.setItem(\"AdminStatus\", true);\r\n          }\r\n          else\r\n            localStorage.setItem(\"SelectSkill\", true);\r\n          UserApi.getMyProfileApi({\r\n            token: res.data.token\r\n          }).then(res => {\r\n            if (res.code === \"0\") localStorage.setItem(\"user_id\", res.data.id);\r\n          });\r\n          this.props.history.push(\"/\");\r\n        } else\r\n          this.setState({\r\n            alert: (\r\n              <SweetAlert\r\n                danger\r\n                title=\"You are not authorized to view this section\"\r\n                onConfirm={() => {\r\n                  this.setState({ alert: null });\r\n                }}\r\n              />\r\n            )\r\n          });\r\n      } else\r\n        this.setState({\r\n          alert: (\r\n            <SweetAlert\r\n              danger\r\n              title={res.message}\r\n              onConfirm={() => {\r\n                this.setState({ alert: null });\r\n              }}\r\n            />\r\n          )\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"login-container\">\r\n          <div>\r\n            <h3 className=\"text-center\">UASSESS</h3>\r\n            <Card\r\n              title=\"Edit Profile\"\r\n              login=\"true\"\r\n              content={\r\n                <Fragment>\r\n                  <p>Sign in to start your Assessment</p>\r\n                  <form onSubmit={this.checkUser}>\r\n                    <FormGroup controlId=\"formHorizontalEmail\">\r\n                      <ControlLabel>Email</ControlLabel>\r\n                      <FormControl\r\n                        type=\"email\"\r\n                        name=\"username\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"formHorizontalPassword\">\r\n                      <ControlLabel>Password</ControlLabel>\r\n                      <FormControl\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Button bsStyle=\"info\" fill type=\"submit\">\r\n                        Sign In\r\n                      </Button>\r\n                    </FormGroup>\r\n                  </form>\r\n                </Fragment>\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        {this.state.alert}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport Header from \"components/Header/Header\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport { style } from \"variables/Variables.jsx\";\nimport MainRoutes from \"routes/MainRoutes.jsx\";\nimport Login from \"views/Authentication/Login.jsx\";\n\nexport default class Verification extends Component {\n  state = {\n    redirectToLoginPage: false,\n    _notificationSystem: null\n  };\n\n  logoutUser = () => {\n    localStorage.setItem(\"user_status\", \" \");\n    this.setState({ redirectToLoginPage: true });\n  };\n\n  handleNotificationClick = position => {\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n    this.state._notificationSystem.addNotification({\n      title: <span className=\"fa fa-user\" aria-hidden=\"true\" />,\n      message: (\n        <div>\n          Welcome to <b>UAssess Web Test</b>\n        </div>\n      ),\n      level: level,\n      position: position,\n      autoDismiss: 15\n    });\n  };\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"user_status\") === \"User_Logged_In\") {\n      this.setState({ _notificationSystem: this.refs.notificationSystem });\n      var _notificationSystem = this.refs.notificationSystem;\n      var color = Math.floor(Math.random() * 4 + 1);\n      var level;\n      switch (color) {\n        case 1:\n          level = \"success\";\n          break;\n        case 2:\n          level = \"warning\";\n          break;\n        case 3:\n          level = \"error\";\n          break;\n        case 4:\n          level = \"info\";\n          break;\n        default:\n          break;\n      }\n      _notificationSystem.addNotification({\n        title: <span className=\"fa fa-gift\" aria-hidden=\"true\" />,\n        message: (\n          <div>\n            Welcome to <b>UAssess Web Test</b>\n          </div>\n        ),\n        level: level,\n        position: \"tr\",\n        autoDismiss: 15\n      });\n    }\n  };\n\n  componentDidUpdate = e => {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  };\n\n  render() {\n    return localStorage.getItem(\"user_status\") === \"User_Logged_In\" ? (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} />\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {MainRoutes.map((prop, key) => {\n              if (prop.redirect)\n                return <Redirect from={prop.path} to={prop.to} key={key} />;\n              return (\n                <Route\n                  exact\n                  path={prop.path}\n                  component={prop.component}\n                  key={key}\n                  page={prop.page}\n                />\n              );\n            })}\n          </Switch>\n          <Footer />\n        </div>\n      </div>\n    ) : (\n      <div className=\"wrapper\">\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Verification from \"routes/Verification.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/css/main.css\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/navigationtab.css\";\nimport \"./assets/css/tag.css\";\nimport \"./assets/css/403page.css\";\nimport \"./assets/css/switchtoggle.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route to=\"/\" component={Verification}/>;\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}